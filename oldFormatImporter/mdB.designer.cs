#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace oldFormatImporter
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataStore")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertmangaInfo(mangaInfo instance);
    partial void UpdatemangaInfo(mangaInfo instance);
    partial void DeletemangaInfo(mangaInfo instance);
    partial void InsertmangaReadingList(mangaReadingList instance);
    partial void UpdatemangaReadingList(mangaReadingList instance);
    partial void DeletemangaReadingList(mangaReadingList instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::oldFormatImporter.Properties.Settings.Default.DataStoreConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mangaInfo> mangaInfos
		{
			get
			{
				return this.GetTable<mangaInfo>();
			}
		}
		
		public System.Data.Linq.Table<mangaReadingList> mangaReadingLists
		{
			get
			{
				return this.GetTable<mangaReadingList>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mangaInfo")]
	public partial class mangaInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mangaID;
		
		private string _mangaTitle;
		
		private string _mangaDescription;
		
		private System.Nullable<int> _authorID;
		
		private System.Nullable<System.DateTime> _dateOfPublish;
		
		private string _mangaStatus;
		
		private System.Data.Linq.Binary _mangaCover;
		
		private System.Nullable<int> _publisherID;
		
		private EntitySet<mangaReadingList> _mangaReadingLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmangaIDChanging(int value);
    partial void OnmangaIDChanged();
    partial void OnmangaTitleChanging(string value);
    partial void OnmangaTitleChanged();
    partial void OnmangaDescriptionChanging(string value);
    partial void OnmangaDescriptionChanged();
    partial void OnauthorIDChanging(System.Nullable<int> value);
    partial void OnauthorIDChanged();
    partial void OndateOfPublishChanging(System.Nullable<System.DateTime> value);
    partial void OndateOfPublishChanged();
    partial void OnmangaStatusChanging(string value);
    partial void OnmangaStatusChanged();
    partial void OnmangaCoverChanging(System.Data.Linq.Binary value);
    partial void OnmangaCoverChanged();
    partial void OnpublisherIDChanging(System.Nullable<int> value);
    partial void OnpublisherIDChanged();
    #endregion
		
		public mangaInfo()
		{
			this._mangaReadingLists = new EntitySet<mangaReadingList>(new Action<mangaReadingList>(this.attach_mangaReadingLists), new Action<mangaReadingList>(this.detach_mangaReadingLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int mangaID
		{
			get
			{
				return this._mangaID;
			}
			set
			{
				if ((this._mangaID != value))
				{
					this.OnmangaIDChanging(value);
					this.SendPropertyChanging();
					this._mangaID = value;
					this.SendPropertyChanged("mangaID");
					this.OnmangaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaTitle", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string mangaTitle
		{
			get
			{
				return this._mangaTitle;
			}
			set
			{
				if ((this._mangaTitle != value))
				{
					this.OnmangaTitleChanging(value);
					this.SendPropertyChanging();
					this._mangaTitle = value;
					this.SendPropertyChanged("mangaTitle");
					this.OnmangaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaDescription", DbType="VarChar(MAX)")]
		public string mangaDescription
		{
			get
			{
				return this._mangaDescription;
			}
			set
			{
				if ((this._mangaDescription != value))
				{
					this.OnmangaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._mangaDescription = value;
					this.SendPropertyChanged("mangaDescription");
					this.OnmangaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorID", DbType="Int")]
		public System.Nullable<int> authorID
		{
			get
			{
				return this._authorID;
			}
			set
			{
				if ((this._authorID != value))
				{
					this.OnauthorIDChanging(value);
					this.SendPropertyChanging();
					this._authorID = value;
					this.SendPropertyChanged("authorID");
					this.OnauthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOfPublish", DbType="Date")]
		public System.Nullable<System.DateTime> dateOfPublish
		{
			get
			{
				return this._dateOfPublish;
			}
			set
			{
				if ((this._dateOfPublish != value))
				{
					this.OndateOfPublishChanging(value);
					this.SendPropertyChanging();
					this._dateOfPublish = value;
					this.SendPropertyChanged("dateOfPublish");
					this.OndateOfPublishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaStatus", DbType="NVarChar(10)")]
		public string mangaStatus
		{
			get
			{
				return this._mangaStatus;
			}
			set
			{
				if ((this._mangaStatus != value))
				{
					this.OnmangaStatusChanging(value);
					this.SendPropertyChanging();
					this._mangaStatus = value;
					this.SendPropertyChanged("mangaStatus");
					this.OnmangaStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaCover", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary mangaCover
		{
			get
			{
				return this._mangaCover;
			}
			set
			{
				if ((this._mangaCover != value))
				{
					this.OnmangaCoverChanging(value);
					this.SendPropertyChanging();
					this._mangaCover = value;
					this.SendPropertyChanged("mangaCover");
					this.OnmangaCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisherID", DbType="Int")]
		public System.Nullable<int> publisherID
		{
			get
			{
				return this._publisherID;
			}
			set
			{
				if ((this._publisherID != value))
				{
					this.OnpublisherIDChanging(value);
					this.SendPropertyChanging();
					this._publisherID = value;
					this.SendPropertyChanged("publisherID");
					this.OnpublisherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mangaInfo_mangaReadingList", Storage="_mangaReadingLists", ThisKey="mangaID", OtherKey="mangaID")]
		public EntitySet<mangaReadingList> mangaReadingLists
		{
			get
			{
				return this._mangaReadingLists;
			}
			set
			{
				this._mangaReadingLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mangaReadingLists(mangaReadingList entity)
		{
			this.SendPropertyChanging();
			entity.mangaInfo = this;
		}
		
		private void detach_mangaReadingLists(mangaReadingList entity)
		{
			this.SendPropertyChanging();
			entity.mangaInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mangaReadingList")]
	public partial class mangaReadingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mangaEntryID;
		
		private int _mangaID;
		
		private System.Nullable<double> _mangaStartingChapter;
		
		private System.Nullable<double> _mangaCurrentChapter;
		
		private string _mangaURL;
		
		private System.Nullable<bool> _mangaReadingFinished;
		
		private System.Nullable<System.DateTime> _mangaDateRead;
		
		private EntityRef<mangaInfo> _mangaInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmangaEntryIDChanging(int value);
    partial void OnmangaEntryIDChanged();
    partial void OnmangaIDChanging(int value);
    partial void OnmangaIDChanged();
    partial void OnmangaStartingChapterChanging(System.Nullable<double> value);
    partial void OnmangaStartingChapterChanged();
    partial void OnmangaCurrentChapterChanging(System.Nullable<double> value);
    partial void OnmangaCurrentChapterChanged();
    partial void OnmangaURLChanging(string value);
    partial void OnmangaURLChanged();
    partial void OnmangaReadingFinishedChanging(System.Nullable<bool> value);
    partial void OnmangaReadingFinishedChanged();
    partial void OnmangaDateReadChanging(System.Nullable<System.DateTime> value);
    partial void OnmangaDateReadChanged();
    #endregion
		
		public mangaReadingList()
		{
			this._mangaInfo = default(EntityRef<mangaInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaEntryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int mangaEntryID
		{
			get
			{
				return this._mangaEntryID;
			}
			set
			{
				if ((this._mangaEntryID != value))
				{
					this.OnmangaEntryIDChanging(value);
					this.SendPropertyChanging();
					this._mangaEntryID = value;
					this.SendPropertyChanged("mangaEntryID");
					this.OnmangaEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaID", DbType="Int NOT NULL")]
		public int mangaID
		{
			get
			{
				return this._mangaID;
			}
			set
			{
				if ((this._mangaID != value))
				{
					if (this._mangaInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmangaIDChanging(value);
					this.SendPropertyChanging();
					this._mangaID = value;
					this.SendPropertyChanged("mangaID");
					this.OnmangaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaStartingChapter", DbType="Float")]
		public System.Nullable<double> mangaStartingChapter
		{
			get
			{
				return this._mangaStartingChapter;
			}
			set
			{
				if ((this._mangaStartingChapter != value))
				{
					this.OnmangaStartingChapterChanging(value);
					this.SendPropertyChanging();
					this._mangaStartingChapter = value;
					this.SendPropertyChanged("mangaStartingChapter");
					this.OnmangaStartingChapterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaCurrentChapter", DbType="Float")]
		public System.Nullable<double> mangaCurrentChapter
		{
			get
			{
				return this._mangaCurrentChapter;
			}
			set
			{
				if ((this._mangaCurrentChapter != value))
				{
					this.OnmangaCurrentChapterChanging(value);
					this.SendPropertyChanging();
					this._mangaCurrentChapter = value;
					this.SendPropertyChanged("mangaCurrentChapter");
					this.OnmangaCurrentChapterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaURL", DbType="NVarChar(200)")]
		public string mangaURL
		{
			get
			{
				return this._mangaURL;
			}
			set
			{
				if ((this._mangaURL != value))
				{
					this.OnmangaURLChanging(value);
					this.SendPropertyChanging();
					this._mangaURL = value;
					this.SendPropertyChanged("mangaURL");
					this.OnmangaURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaReadingFinished", DbType="Bit")]
		public System.Nullable<bool> mangaReadingFinished
		{
			get
			{
				return this._mangaReadingFinished;
			}
			set
			{
				if ((this._mangaReadingFinished != value))
				{
					this.OnmangaReadingFinishedChanging(value);
					this.SendPropertyChanging();
					this._mangaReadingFinished = value;
					this.SendPropertyChanged("mangaReadingFinished");
					this.OnmangaReadingFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaDateRead", DbType="Date")]
		public System.Nullable<System.DateTime> mangaDateRead
		{
			get
			{
				return this._mangaDateRead;
			}
			set
			{
				if ((this._mangaDateRead != value))
				{
					this.OnmangaDateReadChanging(value);
					this.SendPropertyChanging();
					this._mangaDateRead = value;
					this.SendPropertyChanged("mangaDateRead");
					this.OnmangaDateReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mangaInfo_mangaReadingList", Storage="_mangaInfo", ThisKey="mangaID", OtherKey="mangaID", IsForeignKey=true)]
		public mangaInfo mangaInfo
		{
			get
			{
				return this._mangaInfo.Entity;
			}
			set
			{
				mangaInfo previousValue = this._mangaInfo.Entity;
				if (((previousValue != value) 
							|| (this._mangaInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mangaInfo.Entity = null;
						previousValue.mangaReadingLists.Remove(this);
					}
					this._mangaInfo.Entity = value;
					if ((value != null))
					{
						value.mangaReadingLists.Add(this);
						this._mangaID = value.mangaID;
					}
					else
					{
						this._mangaID = default(int);
					}
					this.SendPropertyChanged("mangaInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
