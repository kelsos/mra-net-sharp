#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mraSharp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="mds")]
	public partial class Mds : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertM_authorInfo(M_authorInfo instance);
    partial void UpdateM_authorInfo(M_authorInfo instance);
    partial void DeleteM_authorInfo(M_authorInfo instance);
    partial void InsertM_genreInfo(M_genreInfo instance);
    partial void UpdateM_genreInfo(M_genreInfo instance);
    partial void DeleteM_genreInfo(M_genreInfo instance);
    partial void InsertM_mangaInfo(M_mangaInfo instance);
    partial void UpdateM_mangaInfo(M_mangaInfo instance);
    partial void DeleteM_mangaInfo(M_mangaInfo instance);
    partial void InsertM_publisherInfo(M_publisherInfo instance);
    partial void UpdateM_publisherInfo(M_publisherInfo instance);
    partial void DeleteM_publisherInfo(M_publisherInfo instance);
    partial void InsertMm_mangaAuthors(Mm_mangaAuthors instance);
    partial void UpdateMm_mangaAuthors(Mm_mangaAuthors instance);
    partial void DeleteMm_mangaAuthors(Mm_mangaAuthors instance);
    partial void InsertMm_mangaGenres(Mm_mangaGenres instance);
    partial void UpdateMm_mangaGenres(Mm_mangaGenres instance);
    partial void DeleteMm_mangaGenres(Mm_mangaGenres instance);
    partial void InsertMr_readingList(Mr_readingList instance);
    partial void UpdateMr_readingList(Mr_readingList instance);
    partial void DeleteMr_readingList(Mr_readingList instance);
    partial void InsertRss_NewsStorage(Rss_NewsStorage instance);
    partial void UpdateRss_NewsStorage(Rss_NewsStorage instance);
    partial void DeleteRss_NewsStorage(Rss_NewsStorage instance);
    partial void InsertRss_Subscriptions(Rss_Subscriptions instance);
    partial void UpdateRss_Subscriptions(Rss_Subscriptions instance);
    partial void DeleteRss_Subscriptions(Rss_Subscriptions instance);
    #endregion
		
		public Mds(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Mds(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Mds(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Mds(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<M_authorInfo> M_authorInfo
		{
			get
			{
				return this.GetTable<M_authorInfo>();
			}
		}
		
		public System.Data.Linq.Table<M_genreInfo> M_genreInfo
		{
			get
			{
				return this.GetTable<M_genreInfo>();
			}
		}
		
		public System.Data.Linq.Table<M_mangaInfo> M_mangaInfo
		{
			get
			{
				return this.GetTable<M_mangaInfo>();
			}
		}
		
		public System.Data.Linq.Table<M_publisherInfo> M_publisherInfo
		{
			get
			{
				return this.GetTable<M_publisherInfo>();
			}
		}
		
		public System.Data.Linq.Table<Mm_mangaAuthors> Mm_mangaAuthors
		{
			get
			{
				return this.GetTable<Mm_mangaAuthors>();
			}
		}
		
		public System.Data.Linq.Table<Mm_mangaGenres> Mm_mangaGenres
		{
			get
			{
				return this.GetTable<Mm_mangaGenres>();
			}
		}
		
		public System.Data.Linq.Table<Mr_readingList> Mr_readingList
		{
			get
			{
				return this.GetTable<Mr_readingList>();
			}
		}
		
		public System.Data.Linq.Table<Rss_NewsStorage> Rss_NewsStorage
		{
			get
			{
				return this.GetTable<Rss_NewsStorage>();
			}
		}
		
		public System.Data.Linq.Table<Rss_Subscriptions> Rss_Subscriptions
		{
			get
			{
				return this.GetTable<Rss_Subscriptions>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="m_authorInfo")]
	public partial class M_authorInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthorID;
		
		private string _AuthorFullName;
		
		private string _AuthorCountryOfOrigin;
		
		private System.Nullable<System.DateTime> _AuthorDateOfBirth;
		
		private string _AuthorWebsite;
		
		private EntitySet<Mm_mangaAuthors> _Mm_mangaAuthors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthorIDChanging(int value);
    partial void OnAuthorIDChanged();
    partial void OnAuthorFullNameChanging(string value);
    partial void OnAuthorFullNameChanged();
    partial void OnAuthorCountryOfOriginChanging(string value);
    partial void OnAuthorCountryOfOriginChanged();
    partial void OnAuthorDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnAuthorDateOfBirthChanged();
    partial void OnAuthorWebsiteChanging(string value);
    partial void OnAuthorWebsiteChanged();
    #endregion
		
		public M_authorInfo()
		{
			this._Mm_mangaAuthors = new EntitySet<Mm_mangaAuthors>(new Action<Mm_mangaAuthors>(this.attach_Mm_mangaAuthors), new Action<Mm_mangaAuthors>(this.detach_Mm_mangaAuthors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="authorID", Storage="_AuthorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="authorFullName", Storage="_AuthorFullName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AuthorFullName
		{
			get
			{
				return this._AuthorFullName;
			}
			set
			{
				if ((this._AuthorFullName != value))
				{
					this.OnAuthorFullNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorFullName = value;
					this.SendPropertyChanged("AuthorFullName");
					this.OnAuthorFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="authorCountryOfOrigin", Storage="_AuthorCountryOfOrigin", DbType="NVarChar(40)")]
		public string AuthorCountryOfOrigin
		{
			get
			{
				return this._AuthorCountryOfOrigin;
			}
			set
			{
				if ((this._AuthorCountryOfOrigin != value))
				{
					this.OnAuthorCountryOfOriginChanging(value);
					this.SendPropertyChanging();
					this._AuthorCountryOfOrigin = value;
					this.SendPropertyChanged("AuthorCountryOfOrigin");
					this.OnAuthorCountryOfOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="authorDateOfBirth", Storage="_AuthorDateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuthorDateOfBirth
		{
			get
			{
				return this._AuthorDateOfBirth;
			}
			set
			{
				if ((this._AuthorDateOfBirth != value))
				{
					this.OnAuthorDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._AuthorDateOfBirth = value;
					this.SendPropertyChanged("AuthorDateOfBirth");
					this.OnAuthorDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="authorWebsite", Storage="_AuthorWebsite", DbType="NVarChar(150)")]
		public string AuthorWebsite
		{
			get
			{
				return this._AuthorWebsite;
			}
			set
			{
				if ((this._AuthorWebsite != value))
				{
					this.OnAuthorWebsiteChanging(value);
					this.SendPropertyChanging();
					this._AuthorWebsite = value;
					this.SendPropertyChanged("AuthorWebsite");
					this.OnAuthorWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_authorInfo_Mm_mangaAuthors", Storage="_Mm_mangaAuthors", ThisKey="AuthorID", OtherKey="Ma_authorID")]
		public EntitySet<Mm_mangaAuthors> Mm_mangaAuthors
		{
			get
			{
				return this._Mm_mangaAuthors;
			}
			set
			{
				this._Mm_mangaAuthors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mm_mangaAuthors(Mm_mangaAuthors entity)
		{
			this.SendPropertyChanging();
			entity.M_authorInfo = this;
		}
		
		private void detach_Mm_mangaAuthors(Mm_mangaAuthors entity)
		{
			this.SendPropertyChanging();
			entity.M_authorInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="m_genreInfo")]
	public partial class M_genreInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GenreID;
		
		private string _GenreName;
		
		private EntitySet<Mm_mangaGenres> _Mm_mangaGenres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenreIDChanging(int value);
    partial void OnGenreIDChanged();
    partial void OnGenreNameChanging(string value);
    partial void OnGenreNameChanged();
    #endregion
		
		public M_genreInfo()
		{
			this._Mm_mangaGenres = new EntitySet<Mm_mangaGenres>(new Action<Mm_mangaGenres>(this.attach_Mm_mangaGenres), new Action<Mm_mangaGenres>(this.detach_Mm_mangaGenres));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="genreID", Storage="_GenreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GenreID
		{
			get
			{
				return this._GenreID;
			}
			set
			{
				if ((this._GenreID != value))
				{
					this.OnGenreIDChanging(value);
					this.SendPropertyChanging();
					this._GenreID = value;
					this.SendPropertyChanged("GenreID");
					this.OnGenreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="genreName", Storage="_GenreName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GenreName
		{
			get
			{
				return this._GenreName;
			}
			set
			{
				if ((this._GenreName != value))
				{
					this.OnGenreNameChanging(value);
					this.SendPropertyChanging();
					this._GenreName = value;
					this.SendPropertyChanged("GenreName");
					this.OnGenreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_genreInfo_Mm_mangaGenres", Storage="_Mm_mangaGenres", ThisKey="GenreID", OtherKey="Mm_genreID")]
		public EntitySet<Mm_mangaGenres> Mm_mangaGenres
		{
			get
			{
				return this._Mm_mangaGenres;
			}
			set
			{
				this._Mm_mangaGenres.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mm_mangaGenres(Mm_mangaGenres entity)
		{
			this.SendPropertyChanging();
			entity.M_genreInfo = this;
		}
		
		private void detach_Mm_mangaGenres(Mm_mangaGenres entity)
		{
			this.SendPropertyChanging();
			entity.M_genreInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="m_mangaInfo")]
	public partial class M_mangaInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MangaID;
		
		private string _MangaTitle;
		
		private string _MangaDescription;
		
		private System.Nullable<System.DateTime> _MangaYearOfPublisher;
		
		private string _MangaStatus;
		
		private System.Nullable<int> _MangaPublisherID;
		
		private System.Data.Linq.Binary _MangaCover;
		
		private EntitySet<Mm_mangaAuthors> _Mm_mangaAuthors;
		
		private EntitySet<Mm_mangaGenres> _Mm_mangaGenres;
		
		private EntitySet<Mr_readingList> _Mr_readingList;
		
		private EntityRef<M_publisherInfo> _M_publisherInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMangaIDChanging(int value);
    partial void OnMangaIDChanged();
    partial void OnMangaTitleChanging(string value);
    partial void OnMangaTitleChanged();
    partial void OnMangaDescriptionChanging(string value);
    partial void OnMangaDescriptionChanged();
    partial void OnMangaYearOfPublisherChanging(System.Nullable<System.DateTime> value);
    partial void OnMangaYearOfPublisherChanged();
    partial void OnMangaStatusChanging(string value);
    partial void OnMangaStatusChanged();
    partial void OnMangaPublisherIDChanging(System.Nullable<int> value);
    partial void OnMangaPublisherIDChanged();
    partial void OnMangaCoverChanging(System.Data.Linq.Binary value);
    partial void OnMangaCoverChanged();
    #endregion
		
		public M_mangaInfo()
		{
			this._Mm_mangaAuthors = new EntitySet<Mm_mangaAuthors>(new Action<Mm_mangaAuthors>(this.attach_Mm_mangaAuthors), new Action<Mm_mangaAuthors>(this.detach_Mm_mangaAuthors));
			this._Mm_mangaGenres = new EntitySet<Mm_mangaGenres>(new Action<Mm_mangaGenres>(this.attach_Mm_mangaGenres), new Action<Mm_mangaGenres>(this.detach_Mm_mangaGenres));
			this._Mr_readingList = new EntitySet<Mr_readingList>(new Action<Mr_readingList>(this.attach_Mr_readingList), new Action<Mr_readingList>(this.detach_Mr_readingList));
			this._M_publisherInfo = default(EntityRef<M_publisherInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mangaID", Storage="_MangaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MangaID
		{
			get
			{
				return this._MangaID;
			}
			set
			{
				if ((this._MangaID != value))
				{
					this.OnMangaIDChanging(value);
					this.SendPropertyChanging();
					this._MangaID = value;
					this.SendPropertyChanged("MangaID");
					this.OnMangaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mangaTitle", Storage="_MangaTitle", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string MangaTitle
		{
			get
			{
				return this._MangaTitle;
			}
			set
			{
				if ((this._MangaTitle != value))
				{
					this.OnMangaTitleChanging(value);
					this.SendPropertyChanging();
					this._MangaTitle = value;
					this.SendPropertyChanged("MangaTitle");
					this.OnMangaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mangaDescription", Storage="_MangaDescription", DbType="NVarChar(3000)")]
		public string MangaDescription
		{
			get
			{
				return this._MangaDescription;
			}
			set
			{
				if ((this._MangaDescription != value))
				{
					this.OnMangaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MangaDescription = value;
					this.SendPropertyChanged("MangaDescription");
					this.OnMangaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mangaYearOfPublisher", Storage="_MangaYearOfPublisher", DbType="DateTime")]
		public System.Nullable<System.DateTime> MangaYearOfPublisher
		{
			get
			{
				return this._MangaYearOfPublisher;
			}
			set
			{
				if ((this._MangaYearOfPublisher != value))
				{
					this.OnMangaYearOfPublisherChanging(value);
					this.SendPropertyChanging();
					this._MangaYearOfPublisher = value;
					this.SendPropertyChanged("MangaYearOfPublisher");
					this.OnMangaYearOfPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mangaStatus", Storage="_MangaStatus", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MangaStatus
		{
			get
			{
				return this._MangaStatus;
			}
			set
			{
				if ((this._MangaStatus != value))
				{
					this.OnMangaStatusChanging(value);
					this.SendPropertyChanging();
					this._MangaStatus = value;
					this.SendPropertyChanged("MangaStatus");
					this.OnMangaStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mangaPublisherID", Storage="_MangaPublisherID", DbType="Int")]
		public System.Nullable<int> MangaPublisherID
		{
			get
			{
				return this._MangaPublisherID;
			}
			set
			{
				if ((this._MangaPublisherID != value))
				{
					this.OnMangaPublisherIDChanging(value);
					this.SendPropertyChanging();
					this._MangaPublisherID = value;
					this.SendPropertyChanged("MangaPublisherID");
					this.OnMangaPublisherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mangaCover", Storage="_MangaCover", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary MangaCover
		{
			get
			{
				return this._MangaCover;
			}
			set
			{
				if ((this._MangaCover != value))
				{
					this.OnMangaCoverChanging(value);
					this.SendPropertyChanging();
					this._MangaCover = value;
					this.SendPropertyChanged("MangaCover");
					this.OnMangaCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_mangaInfo_Mm_mangaAuthors", Storage="_Mm_mangaAuthors", ThisKey="MangaID", OtherKey="Ma_mangaID")]
		public EntitySet<Mm_mangaAuthors> Mm_mangaAuthors
		{
			get
			{
				return this._Mm_mangaAuthors;
			}
			set
			{
				this._Mm_mangaAuthors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_mangaInfo_Mm_mangaGenres", Storage="_Mm_mangaGenres", ThisKey="MangaID", OtherKey="Mm_mangaID")]
		public EntitySet<Mm_mangaGenres> Mm_mangaGenres
		{
			get
			{
				return this._Mm_mangaGenres;
			}
			set
			{
				this._Mm_mangaGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_mangaInfo_Mr_readingList", Storage="_Mr_readingList", ThisKey="MangaID", OtherKey="MangaID")]
		public EntitySet<Mr_readingList> Mr_readingList
		{
			get
			{
				return this._Mr_readingList;
			}
			set
			{
				this._Mr_readingList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_publisherInfo_M_mangaInfo", Storage="_M_publisherInfo", ThisKey="MangaPublisherID", OtherKey="PublisherID", IsForeignKey=true)]
		public M_publisherInfo M_publisherInfo
		{
			get
			{
				return this._M_publisherInfo.Entity;
			}
			set
			{
				M_publisherInfo previousValue = this._M_publisherInfo.Entity;
				if (((previousValue != value) 
							|| (this._M_publisherInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M_publisherInfo.Entity = null;
						previousValue.M_mangaInfo.Remove(this);
					}
					this._M_publisherInfo.Entity = value;
					if ((value != null))
					{
						value.M_mangaInfo.Add(this);
						this._MangaPublisherID = value.PublisherID;
					}
					else
					{
						this._MangaPublisherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("M_publisherInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mm_mangaAuthors(Mm_mangaAuthors entity)
		{
			this.SendPropertyChanging();
			entity.M_mangaInfo = this;
		}
		
		private void detach_Mm_mangaAuthors(Mm_mangaAuthors entity)
		{
			this.SendPropertyChanging();
			entity.M_mangaInfo = null;
		}
		
		private void attach_Mm_mangaGenres(Mm_mangaGenres entity)
		{
			this.SendPropertyChanging();
			entity.M_mangaInfo = this;
		}
		
		private void detach_Mm_mangaGenres(Mm_mangaGenres entity)
		{
			this.SendPropertyChanging();
			entity.M_mangaInfo = null;
		}
		
		private void attach_Mr_readingList(Mr_readingList entity)
		{
			this.SendPropertyChanging();
			entity.M_mangaInfo = this;
		}
		
		private void detach_Mr_readingList(Mr_readingList entity)
		{
			this.SendPropertyChanging();
			entity.M_mangaInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="m_publisherInfo")]
	public partial class M_publisherInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PublisherID;
		
		private string _PublisherName;
		
		private string _PublisherCountry;
		
		private string _PublisherWebsite;
		
		private string _PublisherNote;
		
		private EntitySet<M_mangaInfo> _M_mangaInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPublisherIDChanging(int value);
    partial void OnPublisherIDChanged();
    partial void OnPublisherNameChanging(string value);
    partial void OnPublisherNameChanged();
    partial void OnPublisherCountryChanging(string value);
    partial void OnPublisherCountryChanged();
    partial void OnPublisherWebsiteChanging(string value);
    partial void OnPublisherWebsiteChanged();
    partial void OnPublisherNoteChanging(string value);
    partial void OnPublisherNoteChanged();
    #endregion
		
		public M_publisherInfo()
		{
			this._M_mangaInfo = new EntitySet<M_mangaInfo>(new Action<M_mangaInfo>(this.attach_M_mangaInfo), new Action<M_mangaInfo>(this.detach_M_mangaInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="publisherID", Storage="_PublisherID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PublisherID
		{
			get
			{
				return this._PublisherID;
			}
			set
			{
				if ((this._PublisherID != value))
				{
					this.OnPublisherIDChanging(value);
					this.SendPropertyChanging();
					this._PublisherID = value;
					this.SendPropertyChanged("PublisherID");
					this.OnPublisherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="publisherName", Storage="_PublisherName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PublisherName
		{
			get
			{
				return this._PublisherName;
			}
			set
			{
				if ((this._PublisherName != value))
				{
					this.OnPublisherNameChanging(value);
					this.SendPropertyChanging();
					this._PublisherName = value;
					this.SendPropertyChanged("PublisherName");
					this.OnPublisherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="publisherCountry", Storage="_PublisherCountry", DbType="NVarChar(40)")]
		public string PublisherCountry
		{
			get
			{
				return this._PublisherCountry;
			}
			set
			{
				if ((this._PublisherCountry != value))
				{
					this.OnPublisherCountryChanging(value);
					this.SendPropertyChanging();
					this._PublisherCountry = value;
					this.SendPropertyChanged("PublisherCountry");
					this.OnPublisherCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="publisherWebsite", Storage="_PublisherWebsite", DbType="NVarChar(150)")]
		public string PublisherWebsite
		{
			get
			{
				return this._PublisherWebsite;
			}
			set
			{
				if ((this._PublisherWebsite != value))
				{
					this.OnPublisherWebsiteChanging(value);
					this.SendPropertyChanging();
					this._PublisherWebsite = value;
					this.SendPropertyChanged("PublisherWebsite");
					this.OnPublisherWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="publisherNote", Storage="_PublisherNote", DbType="NVarChar(500)")]
		public string PublisherNote
		{
			get
			{
				return this._PublisherNote;
			}
			set
			{
				if ((this._PublisherNote != value))
				{
					this.OnPublisherNoteChanging(value);
					this.SendPropertyChanging();
					this._PublisherNote = value;
					this.SendPropertyChanged("PublisherNote");
					this.OnPublisherNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_publisherInfo_M_mangaInfo", Storage="_M_mangaInfo", ThisKey="PublisherID", OtherKey="MangaPublisherID")]
		public EntitySet<M_mangaInfo> M_mangaInfo
		{
			get
			{
				return this._M_mangaInfo;
			}
			set
			{
				this._M_mangaInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_M_mangaInfo(M_mangaInfo entity)
		{
			this.SendPropertyChanging();
			entity.M_publisherInfo = this;
		}
		
		private void detach_M_mangaInfo(M_mangaInfo entity)
		{
			this.SendPropertyChanging();
			entity.M_publisherInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mm_mangaAuthors")]
	public partial class Mm_mangaAuthors : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ma_mangaID;
		
		private int _Ma_authorID;
		
		private EntityRef<M_authorInfo> _M_authorInfo;
		
		private EntityRef<M_mangaInfo> _M_mangaInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_mangaIDChanging(int value);
    partial void OnMa_mangaIDChanged();
    partial void OnMa_authorIDChanging(int value);
    partial void OnMa_authorIDChanged();
    #endregion
		
		public Mm_mangaAuthors()
		{
			this._M_authorInfo = default(EntityRef<M_authorInfo>);
			this._M_mangaInfo = default(EntityRef<M_mangaInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ma_mangaID", Storage="_Ma_mangaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ma_mangaID
		{
			get
			{
				return this._Ma_mangaID;
			}
			set
			{
				if ((this._Ma_mangaID != value))
				{
					this.OnMa_mangaIDChanging(value);
					this.SendPropertyChanging();
					this._Ma_mangaID = value;
					this.SendPropertyChanged("Ma_mangaID");
					this.OnMa_mangaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ma_authorID", Storage="_Ma_authorID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ma_authorID
		{
			get
			{
				return this._Ma_authorID;
			}
			set
			{
				if ((this._Ma_authorID != value))
				{
					this.OnMa_authorIDChanging(value);
					this.SendPropertyChanging();
					this._Ma_authorID = value;
					this.SendPropertyChanged("Ma_authorID");
					this.OnMa_authorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_authorInfo_Mm_mangaAuthors", Storage="_M_authorInfo", ThisKey="Ma_authorID", OtherKey="AuthorID", IsForeignKey=true, DeleteOnNull=true)]
		public M_authorInfo M_authorInfo
		{
			get
			{
				return this._M_authorInfo.Entity;
			}
			set
			{
				M_authorInfo previousValue = this._M_authorInfo.Entity;
				if (((previousValue != value) 
							|| (this._M_authorInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M_authorInfo.Entity = null;
						previousValue.Mm_mangaAuthors.Remove(this);
					}
					this._M_authorInfo.Entity = value;
					if ((value != null))
					{
						value.Mm_mangaAuthors.Add(this);
						this._Ma_authorID = value.AuthorID;
					}
					else
					{
						this._Ma_authorID = default(int);
					}
					this.SendPropertyChanged("M_authorInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_mangaInfo_Mm_mangaAuthors", Storage="_M_mangaInfo", ThisKey="Ma_mangaID", OtherKey="MangaID", IsForeignKey=true, DeleteOnNull=true)]
		public M_mangaInfo M_mangaInfo
		{
			get
			{
				return this._M_mangaInfo.Entity;
			}
			set
			{
				M_mangaInfo previousValue = this._M_mangaInfo.Entity;
				if (((previousValue != value) 
							|| (this._M_mangaInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M_mangaInfo.Entity = null;
						previousValue.Mm_mangaAuthors.Remove(this);
					}
					this._M_mangaInfo.Entity = value;
					if ((value != null))
					{
						value.Mm_mangaAuthors.Add(this);
						this._Ma_mangaID = value.MangaID;
					}
					else
					{
						this._Ma_mangaID = default(int);
					}
					this.SendPropertyChanged("M_mangaInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mm_mangaGenres")]
	public partial class Mm_mangaGenres : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mm_mangaID;
		
		private int _Mm_genreID;
		
		private EntityRef<M_genreInfo> _M_genreInfo;
		
		private EntityRef<M_mangaInfo> _M_mangaInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMm_mangaIDChanging(int value);
    partial void OnMm_mangaIDChanged();
    partial void OnMm_genreIDChanging(int value);
    partial void OnMm_genreIDChanged();
    #endregion
		
		public Mm_mangaGenres()
		{
			this._M_genreInfo = default(EntityRef<M_genreInfo>);
			this._M_mangaInfo = default(EntityRef<M_mangaInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mm_mangaID", Storage="_Mm_mangaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Mm_mangaID
		{
			get
			{
				return this._Mm_mangaID;
			}
			set
			{
				if ((this._Mm_mangaID != value))
				{
					this.OnMm_mangaIDChanging(value);
					this.SendPropertyChanging();
					this._Mm_mangaID = value;
					this.SendPropertyChanged("Mm_mangaID");
					this.OnMm_mangaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mm_genreID", Storage="_Mm_genreID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Mm_genreID
		{
			get
			{
				return this._Mm_genreID;
			}
			set
			{
				if ((this._Mm_genreID != value))
				{
					this.OnMm_genreIDChanging(value);
					this.SendPropertyChanging();
					this._Mm_genreID = value;
					this.SendPropertyChanged("Mm_genreID");
					this.OnMm_genreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_genreInfo_Mm_mangaGenres", Storage="_M_genreInfo", ThisKey="Mm_genreID", OtherKey="GenreID", IsForeignKey=true, DeleteOnNull=true)]
		public M_genreInfo M_genreInfo
		{
			get
			{
				return this._M_genreInfo.Entity;
			}
			set
			{
				M_genreInfo previousValue = this._M_genreInfo.Entity;
				if (((previousValue != value) 
							|| (this._M_genreInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M_genreInfo.Entity = null;
						previousValue.Mm_mangaGenres.Remove(this);
					}
					this._M_genreInfo.Entity = value;
					if ((value != null))
					{
						value.Mm_mangaGenres.Add(this);
						this._Mm_genreID = value.GenreID;
					}
					else
					{
						this._Mm_genreID = default(int);
					}
					this.SendPropertyChanged("M_genreInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_mangaInfo_Mm_mangaGenres", Storage="_M_mangaInfo", ThisKey="Mm_mangaID", OtherKey="MangaID", IsForeignKey=true, DeleteOnNull=true)]
		public M_mangaInfo M_mangaInfo
		{
			get
			{
				return this._M_mangaInfo.Entity;
			}
			set
			{
				M_mangaInfo previousValue = this._M_mangaInfo.Entity;
				if (((previousValue != value) 
							|| (this._M_mangaInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M_mangaInfo.Entity = null;
						previousValue.Mm_mangaGenres.Remove(this);
					}
					this._M_mangaInfo.Entity = value;
					if ((value != null))
					{
						value.Mm_mangaGenres.Add(this);
						this._Mm_mangaID = value.MangaID;
					}
					else
					{
						this._Mm_mangaID = default(int);
					}
					this.SendPropertyChanged("M_mangaInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mr_readingList")]
	public partial class Mr_readingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntryID;
		
		private int _MangaID;
		
		private System.Nullable<double> _Mr_StartingChapter;
		
		private System.Nullable<double> _Mr_CurrentChapter;
		
		private string _Mr_OnlineURL;
		
		private bool _Mr_IsReadingFinished;
		
		private System.Nullable<System.DateTime> _Mr_LastRead;
		
		private string _Mr_Note;
		
		private EntityRef<M_mangaInfo> _M_mangaInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntryIDChanging(int value);
    partial void OnEntryIDChanged();
    partial void OnMangaIDChanging(int value);
    partial void OnMangaIDChanged();
    partial void OnMr_StartingChapterChanging(System.Nullable<double> value);
    partial void OnMr_StartingChapterChanged();
    partial void OnMr_CurrentChapterChanging(System.Nullable<double> value);
    partial void OnMr_CurrentChapterChanged();
    partial void OnMr_OnlineURLChanging(string value);
    partial void OnMr_OnlineURLChanged();
    partial void OnMr_IsReadingFinishedChanging(bool value);
    partial void OnMr_IsReadingFinishedChanged();
    partial void OnMr_LastReadChanging(System.Nullable<System.DateTime> value);
    partial void OnMr_LastReadChanged();
    partial void OnMr_NoteChanging(string value);
    partial void OnMr_NoteChanged();
    #endregion
		
		public Mr_readingList()
		{
			this._M_mangaInfo = default(EntityRef<M_mangaInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="entryID", Storage="_EntryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntryID
		{
			get
			{
				return this._EntryID;
			}
			set
			{
				if ((this._EntryID != value))
				{
					this.OnEntryIDChanging(value);
					this.SendPropertyChanging();
					this._EntryID = value;
					this.SendPropertyChanged("EntryID");
					this.OnEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mangaID", Storage="_MangaID", DbType="Int NOT NULL")]
		public int MangaID
		{
			get
			{
				return this._MangaID;
			}
			set
			{
				if ((this._MangaID != value))
				{
					this.OnMangaIDChanging(value);
					this.SendPropertyChanging();
					this._MangaID = value;
					this.SendPropertyChanged("MangaID");
					this.OnMangaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mr_StartingChapter", Storage="_Mr_StartingChapter", DbType="Float")]
		public System.Nullable<double> Mr_StartingChapter
		{
			get
			{
				return this._Mr_StartingChapter;
			}
			set
			{
				if ((this._Mr_StartingChapter != value))
				{
					this.OnMr_StartingChapterChanging(value);
					this.SendPropertyChanging();
					this._Mr_StartingChapter = value;
					this.SendPropertyChanged("Mr_StartingChapter");
					this.OnMr_StartingChapterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mr_CurrentChapter", Storage="_Mr_CurrentChapter", DbType="Float")]
		public System.Nullable<double> Mr_CurrentChapter
		{
			get
			{
				return this._Mr_CurrentChapter;
			}
			set
			{
				if ((this._Mr_CurrentChapter != value))
				{
					this.OnMr_CurrentChapterChanging(value);
					this.SendPropertyChanging();
					this._Mr_CurrentChapter = value;
					this.SendPropertyChanged("Mr_CurrentChapter");
					this.OnMr_CurrentChapterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mr_OnlineURL", Storage="_Mr_OnlineURL", DbType="NVarChar(150)")]
		public string Mr_OnlineURL
		{
			get
			{
				return this._Mr_OnlineURL;
			}
			set
			{
				if ((this._Mr_OnlineURL != value))
				{
					this.OnMr_OnlineURLChanging(value);
					this.SendPropertyChanging();
					this._Mr_OnlineURL = value;
					this.SendPropertyChanged("Mr_OnlineURL");
					this.OnMr_OnlineURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mr_IsReadingFinished", Storage="_Mr_IsReadingFinished", DbType="Bit NOT NULL")]
		public bool Mr_IsReadingFinished
		{
			get
			{
				return this._Mr_IsReadingFinished;
			}
			set
			{
				if ((this._Mr_IsReadingFinished != value))
				{
					this.OnMr_IsReadingFinishedChanging(value);
					this.SendPropertyChanging();
					this._Mr_IsReadingFinished = value;
					this.SendPropertyChanged("Mr_IsReadingFinished");
					this.OnMr_IsReadingFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mr_LastRead", Storage="_Mr_LastRead", DbType="DateTime")]
		public System.Nullable<System.DateTime> Mr_LastRead
		{
			get
			{
				return this._Mr_LastRead;
			}
			set
			{
				if ((this._Mr_LastRead != value))
				{
					this.OnMr_LastReadChanging(value);
					this.SendPropertyChanging();
					this._Mr_LastRead = value;
					this.SendPropertyChanged("Mr_LastRead");
					this.OnMr_LastReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="mr_Note", Storage="_Mr_Note", DbType="NVarChar(400)")]
		public string Mr_Note
		{
			get
			{
				return this._Mr_Note;
			}
			set
			{
				if ((this._Mr_Note != value))
				{
					this.OnMr_NoteChanging(value);
					this.SendPropertyChanging();
					this._Mr_Note = value;
					this.SendPropertyChanged("Mr_Note");
					this.OnMr_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M_mangaInfo_Mr_readingList", Storage="_M_mangaInfo", ThisKey="MangaID", OtherKey="MangaID", IsForeignKey=true, DeleteOnNull=true)]
		public M_mangaInfo M_mangaInfo
		{
			get
			{
				return this._M_mangaInfo.Entity;
			}
			set
			{
				M_mangaInfo previousValue = this._M_mangaInfo.Entity;
				if (((previousValue != value) 
							|| (this._M_mangaInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M_mangaInfo.Entity = null;
						previousValue.Mr_readingList.Remove(this);
					}
					this._M_mangaInfo.Entity = value;
					if ((value != null))
					{
						value.Mr_readingList.Add(this);
						this._MangaID = value.MangaID;
					}
					else
					{
						this._MangaID = default(int);
					}
					this.SendPropertyChanged("M_mangaInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rss_NewsStorage")]
	public partial class Rss_NewsStorage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NewsID;
		
		private string _NewsTitle;
		
		private string _NewsLink;
		
		private string _NewsDescription;
		
		private System.Nullable<System.DateTime> _NewsDatePublisher;
		
		private System.Nullable<System.DateTime> _NewsDateAquired;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(int value);
    partial void OnNewsIDChanged();
    partial void OnNewsTitleChanging(string value);
    partial void OnNewsTitleChanged();
    partial void OnNewsLinkChanging(string value);
    partial void OnNewsLinkChanged();
    partial void OnNewsDescriptionChanging(string value);
    partial void OnNewsDescriptionChanged();
    partial void OnNewsDatePublisherChanging(System.Nullable<System.DateTime> value);
    partial void OnNewsDatePublisherChanged();
    partial void OnNewsDateAquiredChanging(System.Nullable<System.DateTime> value);
    partial void OnNewsDateAquiredChanged();
    #endregion
		
		public Rss_NewsStorage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="newsID", Storage="_NewsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NewsID
		{
			get
			{
				return this._NewsID;
			}
			set
			{
				if ((this._NewsID != value))
				{
					this.OnNewsIDChanging(value);
					this.SendPropertyChanging();
					this._NewsID = value;
					this.SendPropertyChanged("NewsID");
					this.OnNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="newsTitle", Storage="_NewsTitle", DbType="NVarChar(150)")]
		public string NewsTitle
		{
			get
			{
				return this._NewsTitle;
			}
			set
			{
				if ((this._NewsTitle != value))
				{
					this.OnNewsTitleChanging(value);
					this.SendPropertyChanging();
					this._NewsTitle = value;
					this.SendPropertyChanged("NewsTitle");
					this.OnNewsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="newsLink", Storage="_NewsLink", DbType="NVarChar(150)")]
		public string NewsLink
		{
			get
			{
				return this._NewsLink;
			}
			set
			{
				if ((this._NewsLink != value))
				{
					this.OnNewsLinkChanging(value);
					this.SendPropertyChanging();
					this._NewsLink = value;
					this.SendPropertyChanged("NewsLink");
					this.OnNewsLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="newsDescription", Storage="_NewsDescription", DbType="NVarChar(1000)")]
		public string NewsDescription
		{
			get
			{
				return this._NewsDescription;
			}
			set
			{
				if ((this._NewsDescription != value))
				{
					this.OnNewsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._NewsDescription = value;
					this.SendPropertyChanged("NewsDescription");
					this.OnNewsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="newsDatePublisher", Storage="_NewsDatePublisher", DbType="DateTime")]
		public System.Nullable<System.DateTime> NewsDatePublisher
		{
			get
			{
				return this._NewsDatePublisher;
			}
			set
			{
				if ((this._NewsDatePublisher != value))
				{
					this.OnNewsDatePublisherChanging(value);
					this.SendPropertyChanging();
					this._NewsDatePublisher = value;
					this.SendPropertyChanged("NewsDatePublisher");
					this.OnNewsDatePublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="newsDateAquired", Storage="_NewsDateAquired", DbType="DateTime")]
		public System.Nullable<System.DateTime> NewsDateAquired
		{
			get
			{
				return this._NewsDateAquired;
			}
			set
			{
				if ((this._NewsDateAquired != value))
				{
					this.OnNewsDateAquiredChanging(value);
					this.SendPropertyChanging();
					this._NewsDateAquired = value;
					this.SendPropertyChanged("NewsDateAquired");
					this.OnNewsDateAquiredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rss_Subscriptions")]
	public partial class Rss_Subscriptions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RssID;
		
		private string _RssURL;
		
		private string _RssChannelName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRssIDChanging(int value);
    partial void OnRssIDChanged();
    partial void OnRssURLChanging(string value);
    partial void OnRssURLChanged();
    partial void OnRssChannelNameChanging(string value);
    partial void OnRssChannelNameChanged();
    #endregion
		
		public Rss_Subscriptions()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rssID", Storage="_RssID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RssID
		{
			get
			{
				return this._RssID;
			}
			set
			{
				if ((this._RssID != value))
				{
					this.OnRssIDChanging(value);
					this.SendPropertyChanging();
					this._RssID = value;
					this.SendPropertyChanged("RssID");
					this.OnRssIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rssURL", Storage="_RssURL", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string RssURL
		{
			get
			{
				return this._RssURL;
			}
			set
			{
				if ((this._RssURL != value))
				{
					this.OnRssURLChanging(value);
					this.SendPropertyChanging();
					this._RssURL = value;
					this.SendPropertyChanged("RssURL");
					this.OnRssURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rssChannelName", Storage="_RssChannelName", DbType="NVarChar(150)")]
		public string RssChannelName
		{
			get
			{
				return this._RssChannelName;
			}
			set
			{
				if ((this._RssChannelName != value))
				{
					this.OnRssChannelNameChanging(value);
					this.SendPropertyChanging();
					this._RssChannelName = value;
					this.SendPropertyChanged("RssChannelName");
					this.OnRssChannelNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
