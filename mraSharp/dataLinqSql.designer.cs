#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mraSharp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataStore")]
	public partial class dataLinqSqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertnewsStorage(newsStorage instance);
    partial void UpdatenewsStorage(newsStorage instance);
    partial void DeletenewsStorage(newsStorage instance);
    partial void InsertrssSubscription(rssSubscription instance);
    partial void UpdaterssSubscription(rssSubscription instance);
    partial void DeleterssSubscription(rssSubscription instance);
    partial void InsertauthorTable(authorTable instance);
    partial void UpdateauthorTable(authorTable instance);
    partial void DeleteauthorTable(authorTable instance);
    partial void InsertgenreInfo(genreInfo instance);
    partial void UpdategenreInfo(genreInfo instance);
    partial void DeletegenreInfo(genreInfo instance);
    partial void InsertmangaAuthor(mangaAuthor instance);
    partial void UpdatemangaAuthor(mangaAuthor instance);
    partial void DeletemangaAuthor(mangaAuthor instance);
    partial void InsertmangaGenre(mangaGenre instance);
    partial void UpdatemangaGenre(mangaGenre instance);
    partial void DeletemangaGenre(mangaGenre instance);
    partial void InsertmangaInfo(mangaInfo instance);
    partial void UpdatemangaInfo(mangaInfo instance);
    partial void DeletemangaInfo(mangaInfo instance);
    partial void InsertpublisherInfo(publisherInfo instance);
    partial void UpdatepublisherInfo(publisherInfo instance);
    partial void DeletepublisherInfo(publisherInfo instance);
    partial void InsertmangaReadingList(mangaReadingList instance);
    partial void UpdatemangaReadingList(mangaReadingList instance);
    partial void DeletemangaReadingList(mangaReadingList instance);
    #endregion
		
		public dataLinqSqlDataContext() : 
				base(global::mraSharp.Properties.Settings.Default.DataStoreConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dataLinqSqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataLinqSqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataLinqSqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataLinqSqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<newsStorage> newsStorages
		{
			get
			{
				return this.GetTable<newsStorage>();
			}
		}
		
		public System.Data.Linq.Table<rssSubscription> rssSubscriptions
		{
			get
			{
				return this.GetTable<rssSubscription>();
			}
		}
		
		public System.Data.Linq.Table<authorTable> authorTables
		{
			get
			{
				return this.GetTable<authorTable>();
			}
		}
		
		public System.Data.Linq.Table<genreInfo> genreInfos
		{
			get
			{
				return this.GetTable<genreInfo>();
			}
		}
		
		public System.Data.Linq.Table<mangaAuthor> mangaAuthors
		{
			get
			{
				return this.GetTable<mangaAuthor>();
			}
		}
		
		public System.Data.Linq.Table<mangaGenre> mangaGenres
		{
			get
			{
				return this.GetTable<mangaGenre>();
			}
		}
		
		public System.Data.Linq.Table<mangaInfo> mangaInfos
		{
			get
			{
				return this.GetTable<mangaInfo>();
			}
		}
		
		public System.Data.Linq.Table<publisherInfo> publisherInfos
		{
			get
			{
				return this.GetTable<publisherInfo>();
			}
		}
		
		public System.Data.Linq.Table<mangaReadingList> mangaReadingLists
		{
			get
			{
				return this.GetTable<mangaReadingList>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.newsStorage")]
	public partial class newsStorage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rssPK;
		
		private string _rssTitle;
		
		private string _rssLink;
		
		private string _rssDescription;
		
		private System.Nullable<System.DateTime> _rssDateAquired;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrssPKChanging(int value);
    partial void OnrssPKChanged();
    partial void OnrssTitleChanging(string value);
    partial void OnrssTitleChanged();
    partial void OnrssLinkChanging(string value);
    partial void OnrssLinkChanged();
    partial void OnrssDescriptionChanging(string value);
    partial void OnrssDescriptionChanged();
    partial void OnrssDateAquiredChanging(System.Nullable<System.DateTime> value);
    partial void OnrssDateAquiredChanged();
    #endregion
		
		public newsStorage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rssPK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int rssPK
		{
			get
			{
				return this._rssPK;
			}
			set
			{
				if ((this._rssPK != value))
				{
					this.OnrssPKChanging(value);
					this.SendPropertyChanging();
					this._rssPK = value;
					this.SendPropertyChanged("rssPK");
					this.OnrssPKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rssTitle", DbType="NVarChar(500)")]
		public string rssTitle
		{
			get
			{
				return this._rssTitle;
			}
			set
			{
				if ((this._rssTitle != value))
				{
					this.OnrssTitleChanging(value);
					this.SendPropertyChanging();
					this._rssTitle = value;
					this.SendPropertyChanged("rssTitle");
					this.OnrssTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rssLink", DbType="NVarChar(500)")]
		public string rssLink
		{
			get
			{
				return this._rssLink;
			}
			set
			{
				if ((this._rssLink != value))
				{
					this.OnrssLinkChanging(value);
					this.SendPropertyChanging();
					this._rssLink = value;
					this.SendPropertyChanged("rssLink");
					this.OnrssLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rssDescription", DbType="NVarChar(1500)")]
		public string rssDescription
		{
			get
			{
				return this._rssDescription;
			}
			set
			{
				if ((this._rssDescription != value))
				{
					this.OnrssDescriptionChanging(value);
					this.SendPropertyChanging();
					this._rssDescription = value;
					this.SendPropertyChanged("rssDescription");
					this.OnrssDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rssDateAquired", DbType="Date")]
		public System.Nullable<System.DateTime> rssDateAquired
		{
			get
			{
				return this._rssDateAquired;
			}
			set
			{
				if ((this._rssDateAquired != value))
				{
					this.OnrssDateAquiredChanging(value);
					this.SendPropertyChanging();
					this._rssDateAquired = value;
					this.SendPropertyChanged("rssDateAquired");
					this.OnrssDateAquiredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rssSubscriptions")]
	public partial class rssSubscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rssPK;
		
		private string _rssUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrssPKChanging(int value);
    partial void OnrssPKChanged();
    partial void OnrssUrlChanging(string value);
    partial void OnrssUrlChanged();
    #endregion
		
		public rssSubscription()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rssPK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int rssPK
		{
			get
			{
				return this._rssPK;
			}
			set
			{
				if ((this._rssPK != value))
				{
					this.OnrssPKChanging(value);
					this.SendPropertyChanging();
					this._rssPK = value;
					this.SendPropertyChanged("rssPK");
					this.OnrssPKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rssUrl", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string rssUrl
		{
			get
			{
				return this._rssUrl;
			}
			set
			{
				if ((this._rssUrl != value))
				{
					this.OnrssUrlChanging(value);
					this.SendPropertyChanging();
					this._rssUrl = value;
					this.SendPropertyChanged("rssUrl");
					this.OnrssUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.authorTable")]
	public partial class authorTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _authorID;
		
		private string _authorFullName;
		
		private string _authorCountryOfOrigin;
		
		private System.Nullable<System.DateTime> _authorDateOfBirth;
		
		private string _authorWebsite;
		
		private EntitySet<mangaAuthor> _mangaAuthors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnauthorIDChanging(int value);
    partial void OnauthorIDChanged();
    partial void OnauthorFullNameChanging(string value);
    partial void OnauthorFullNameChanged();
    partial void OnauthorCountryOfOriginChanging(string value);
    partial void OnauthorCountryOfOriginChanged();
    partial void OnauthorDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnauthorDateOfBirthChanged();
    partial void OnauthorWebsiteChanging(string value);
    partial void OnauthorWebsiteChanged();
    #endregion
		
		public authorTable()
		{
			this._mangaAuthors = new EntitySet<mangaAuthor>(new Action<mangaAuthor>(this.attach_mangaAuthors), new Action<mangaAuthor>(this.detach_mangaAuthors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int authorID
		{
			get
			{
				return this._authorID;
			}
			set
			{
				if ((this._authorID != value))
				{
					this.OnauthorIDChanging(value);
					this.SendPropertyChanging();
					this._authorID = value;
					this.SendPropertyChanged("authorID");
					this.OnauthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorFullName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string authorFullName
		{
			get
			{
				return this._authorFullName;
			}
			set
			{
				if ((this._authorFullName != value))
				{
					this.OnauthorFullNameChanging(value);
					this.SendPropertyChanging();
					this._authorFullName = value;
					this.SendPropertyChanged("authorFullName");
					this.OnauthorFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorCountryOfOrigin", DbType="NVarChar(40)")]
		public string authorCountryOfOrigin
		{
			get
			{
				return this._authorCountryOfOrigin;
			}
			set
			{
				if ((this._authorCountryOfOrigin != value))
				{
					this.OnauthorCountryOfOriginChanging(value);
					this.SendPropertyChanging();
					this._authorCountryOfOrigin = value;
					this.SendPropertyChanged("authorCountryOfOrigin");
					this.OnauthorCountryOfOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorDateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> authorDateOfBirth
		{
			get
			{
				return this._authorDateOfBirth;
			}
			set
			{
				if ((this._authorDateOfBirth != value))
				{
					this.OnauthorDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._authorDateOfBirth = value;
					this.SendPropertyChanged("authorDateOfBirth");
					this.OnauthorDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorWebsite", DbType="NVarChar(150)")]
		public string authorWebsite
		{
			get
			{
				return this._authorWebsite;
			}
			set
			{
				if ((this._authorWebsite != value))
				{
					this.OnauthorWebsiteChanging(value);
					this.SendPropertyChanging();
					this._authorWebsite = value;
					this.SendPropertyChanged("authorWebsite");
					this.OnauthorWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="authorTable_mangaAuthor", Storage="_mangaAuthors", ThisKey="authorID", OtherKey="authorID")]
		public EntitySet<mangaAuthor> mangaAuthors
		{
			get
			{
				return this._mangaAuthors;
			}
			set
			{
				this._mangaAuthors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mangaAuthors(mangaAuthor entity)
		{
			this.SendPropertyChanging();
			entity.authorTable = this;
		}
		
		private void detach_mangaAuthors(mangaAuthor entity)
		{
			this.SendPropertyChanging();
			entity.authorTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.genreInfo")]
	public partial class genreInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _genreID;
		
		private string _genreName;
		
		private EntitySet<mangaGenre> _mangaGenres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngenreIDChanging(int value);
    partial void OngenreIDChanged();
    partial void OngenreNameChanging(string value);
    partial void OngenreNameChanged();
    #endregion
		
		public genreInfo()
		{
			this._mangaGenres = new EntitySet<mangaGenre>(new Action<mangaGenre>(this.attach_mangaGenres), new Action<mangaGenre>(this.detach_mangaGenres));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int genreID
		{
			get
			{
				return this._genreID;
			}
			set
			{
				if ((this._genreID != value))
				{
					this.OngenreIDChanging(value);
					this.SendPropertyChanging();
					this._genreID = value;
					this.SendPropertyChanged("genreID");
					this.OngenreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genreName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string genreName
		{
			get
			{
				return this._genreName;
			}
			set
			{
				if ((this._genreName != value))
				{
					this.OngenreNameChanging(value);
					this.SendPropertyChanging();
					this._genreName = value;
					this.SendPropertyChanged("genreName");
					this.OngenreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="genreInfo_mangaGenre", Storage="_mangaGenres", ThisKey="genreID", OtherKey="genreID")]
		public EntitySet<mangaGenre> mangaGenres
		{
			get
			{
				return this._mangaGenres;
			}
			set
			{
				this._mangaGenres.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mangaGenres(mangaGenre entity)
		{
			this.SendPropertyChanging();
			entity.genreInfo = this;
		}
		
		private void detach_mangaGenres(mangaGenre entity)
		{
			this.SendPropertyChanging();
			entity.genreInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mangaAuthors")]
	public partial class mangaAuthor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mangaID;
		
		private int _authorID;
		
		private EntityRef<authorTable> _authorTable;
		
		private EntityRef<mangaInfo> _mangaInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmangaIDChanging(int value);
    partial void OnmangaIDChanged();
    partial void OnauthorIDChanging(int value);
    partial void OnauthorIDChanged();
    #endregion
		
		public mangaAuthor()
		{
			this._authorTable = default(EntityRef<authorTable>);
			this._mangaInfo = default(EntityRef<mangaInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int mangaID
		{
			get
			{
				return this._mangaID;
			}
			set
			{
				if ((this._mangaID != value))
				{
					if (this._mangaInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmangaIDChanging(value);
					this.SendPropertyChanging();
					this._mangaID = value;
					this.SendPropertyChanged("mangaID");
					this.OnmangaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int authorID
		{
			get
			{
				return this._authorID;
			}
			set
			{
				if ((this._authorID != value))
				{
					if (this._authorTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnauthorIDChanging(value);
					this.SendPropertyChanging();
					this._authorID = value;
					this.SendPropertyChanged("authorID");
					this.OnauthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="authorTable_mangaAuthor", Storage="_authorTable", ThisKey="authorID", OtherKey="authorID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public authorTable authorTable
		{
			get
			{
				return this._authorTable.Entity;
			}
			set
			{
				authorTable previousValue = this._authorTable.Entity;
				if (((previousValue != value) 
							|| (this._authorTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._authorTable.Entity = null;
						previousValue.mangaAuthors.Remove(this);
					}
					this._authorTable.Entity = value;
					if ((value != null))
					{
						value.mangaAuthors.Add(this);
						this._authorID = value.authorID;
					}
					else
					{
						this._authorID = default(int);
					}
					this.SendPropertyChanged("authorTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mangaInfo_mangaAuthor", Storage="_mangaInfo", ThisKey="mangaID", OtherKey="mangaID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mangaInfo mangaInfo
		{
			get
			{
				return this._mangaInfo.Entity;
			}
			set
			{
				mangaInfo previousValue = this._mangaInfo.Entity;
				if (((previousValue != value) 
							|| (this._mangaInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mangaInfo.Entity = null;
						previousValue.mangaAuthors.Remove(this);
					}
					this._mangaInfo.Entity = value;
					if ((value != null))
					{
						value.mangaAuthors.Add(this);
						this._mangaID = value.mangaID;
					}
					else
					{
						this._mangaID = default(int);
					}
					this.SendPropertyChanged("mangaInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mangaGenres")]
	public partial class mangaGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _genreID;
		
		private int _mangaID;
		
		private EntityRef<genreInfo> _genreInfo;
		
		private EntityRef<mangaInfo> _mangaInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngenreIDChanging(int value);
    partial void OngenreIDChanged();
    partial void OnmangaIDChanging(int value);
    partial void OnmangaIDChanged();
    #endregion
		
		public mangaGenre()
		{
			this._genreInfo = default(EntityRef<genreInfo>);
			this._mangaInfo = default(EntityRef<mangaInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genreID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int genreID
		{
			get
			{
				return this._genreID;
			}
			set
			{
				if ((this._genreID != value))
				{
					if (this._genreInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngenreIDChanging(value);
					this.SendPropertyChanging();
					this._genreID = value;
					this.SendPropertyChanged("genreID");
					this.OngenreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int mangaID
		{
			get
			{
				return this._mangaID;
			}
			set
			{
				if ((this._mangaID != value))
				{
					if (this._mangaInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmangaIDChanging(value);
					this.SendPropertyChanging();
					this._mangaID = value;
					this.SendPropertyChanged("mangaID");
					this.OnmangaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="genreInfo_mangaGenre", Storage="_genreInfo", ThisKey="genreID", OtherKey="genreID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public genreInfo genreInfo
		{
			get
			{
				return this._genreInfo.Entity;
			}
			set
			{
				genreInfo previousValue = this._genreInfo.Entity;
				if (((previousValue != value) 
							|| (this._genreInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._genreInfo.Entity = null;
						previousValue.mangaGenres.Remove(this);
					}
					this._genreInfo.Entity = value;
					if ((value != null))
					{
						value.mangaGenres.Add(this);
						this._genreID = value.genreID;
					}
					else
					{
						this._genreID = default(int);
					}
					this.SendPropertyChanged("genreInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mangaInfo_mangaGenre", Storage="_mangaInfo", ThisKey="mangaID", OtherKey="mangaID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public mangaInfo mangaInfo
		{
			get
			{
				return this._mangaInfo.Entity;
			}
			set
			{
				mangaInfo previousValue = this._mangaInfo.Entity;
				if (((previousValue != value) 
							|| (this._mangaInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mangaInfo.Entity = null;
						previousValue.mangaGenres.Remove(this);
					}
					this._mangaInfo.Entity = value;
					if ((value != null))
					{
						value.mangaGenres.Add(this);
						this._mangaID = value.mangaID;
					}
					else
					{
						this._mangaID = default(int);
					}
					this.SendPropertyChanged("mangaInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mangaInfo")]
	public partial class mangaInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mangaID;
		
		private string _mangaTitle;
		
		private string _mangaDescription;
		
		private System.Nullable<int> _authorID;
		
		private System.Nullable<System.DateTime> _dateOfPublish;
		
		private string _mangaStatus;
		
		private System.Data.Linq.Binary _mangaCover;
		
		private System.Nullable<int> _publisherID;
		
		private EntitySet<mangaAuthor> _mangaAuthors;
		
		private EntitySet<mangaGenre> _mangaGenres;
		
		private EntitySet<mangaReadingList> _mangaReadingLists;
		
		private EntityRef<publisherInfo> _publisherInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmangaIDChanging(int value);
    partial void OnmangaIDChanged();
    partial void OnmangaTitleChanging(string value);
    partial void OnmangaTitleChanged();
    partial void OnmangaDescriptionChanging(string value);
    partial void OnmangaDescriptionChanged();
    partial void OnauthorIDChanging(System.Nullable<int> value);
    partial void OnauthorIDChanged();
    partial void OndateOfPublishChanging(System.Nullable<System.DateTime> value);
    partial void OndateOfPublishChanged();
    partial void OnmangaStatusChanging(string value);
    partial void OnmangaStatusChanged();
    partial void OnmangaCoverChanging(System.Data.Linq.Binary value);
    partial void OnmangaCoverChanged();
    partial void OnpublisherIDChanging(System.Nullable<int> value);
    partial void OnpublisherIDChanged();
    #endregion
		
		public mangaInfo()
		{
			this._mangaAuthors = new EntitySet<mangaAuthor>(new Action<mangaAuthor>(this.attach_mangaAuthors), new Action<mangaAuthor>(this.detach_mangaAuthors));
			this._mangaGenres = new EntitySet<mangaGenre>(new Action<mangaGenre>(this.attach_mangaGenres), new Action<mangaGenre>(this.detach_mangaGenres));
			this._mangaReadingLists = new EntitySet<mangaReadingList>(new Action<mangaReadingList>(this.attach_mangaReadingLists), new Action<mangaReadingList>(this.detach_mangaReadingLists));
			this._publisherInfo = default(EntityRef<publisherInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int mangaID
		{
			get
			{
				return this._mangaID;
			}
			set
			{
				if ((this._mangaID != value))
				{
					this.OnmangaIDChanging(value);
					this.SendPropertyChanging();
					this._mangaID = value;
					this.SendPropertyChanged("mangaID");
					this.OnmangaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaTitle", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string mangaTitle
		{
			get
			{
				return this._mangaTitle;
			}
			set
			{
				if ((this._mangaTitle != value))
				{
					this.OnmangaTitleChanging(value);
					this.SendPropertyChanging();
					this._mangaTitle = value;
					this.SendPropertyChanged("mangaTitle");
					this.OnmangaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaDescription", DbType="VarChar(MAX)")]
		public string mangaDescription
		{
			get
			{
				return this._mangaDescription;
			}
			set
			{
				if ((this._mangaDescription != value))
				{
					this.OnmangaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._mangaDescription = value;
					this.SendPropertyChanged("mangaDescription");
					this.OnmangaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorID", DbType="Int")]
		public System.Nullable<int> authorID
		{
			get
			{
				return this._authorID;
			}
			set
			{
				if ((this._authorID != value))
				{
					this.OnauthorIDChanging(value);
					this.SendPropertyChanging();
					this._authorID = value;
					this.SendPropertyChanged("authorID");
					this.OnauthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOfPublish", DbType="Date")]
		public System.Nullable<System.DateTime> dateOfPublish
		{
			get
			{
				return this._dateOfPublish;
			}
			set
			{
				if ((this._dateOfPublish != value))
				{
					this.OndateOfPublishChanging(value);
					this.SendPropertyChanging();
					this._dateOfPublish = value;
					this.SendPropertyChanged("dateOfPublish");
					this.OndateOfPublishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaStatus", DbType="NVarChar(10)")]
		public string mangaStatus
		{
			get
			{
				return this._mangaStatus;
			}
			set
			{
				if ((this._mangaStatus != value))
				{
					this.OnmangaStatusChanging(value);
					this.SendPropertyChanging();
					this._mangaStatus = value;
					this.SendPropertyChanged("mangaStatus");
					this.OnmangaStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaCover", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary mangaCover
		{
			get
			{
				return this._mangaCover;
			}
			set
			{
				if ((this._mangaCover != value))
				{
					this.OnmangaCoverChanging(value);
					this.SendPropertyChanging();
					this._mangaCover = value;
					this.SendPropertyChanged("mangaCover");
					this.OnmangaCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisherID", DbType="Int")]
		public System.Nullable<int> publisherID
		{
			get
			{
				return this._publisherID;
			}
			set
			{
				if ((this._publisherID != value))
				{
					if (this._publisherInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpublisherIDChanging(value);
					this.SendPropertyChanging();
					this._publisherID = value;
					this.SendPropertyChanged("publisherID");
					this.OnpublisherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mangaInfo_mangaAuthor", Storage="_mangaAuthors", ThisKey="mangaID", OtherKey="mangaID")]
		public EntitySet<mangaAuthor> mangaAuthors
		{
			get
			{
				return this._mangaAuthors;
			}
			set
			{
				this._mangaAuthors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mangaInfo_mangaGenre", Storage="_mangaGenres", ThisKey="mangaID", OtherKey="mangaID")]
		public EntitySet<mangaGenre> mangaGenres
		{
			get
			{
				return this._mangaGenres;
			}
			set
			{
				this._mangaGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mangaInfo_mangaReadingList", Storage="_mangaReadingLists", ThisKey="mangaID", OtherKey="mangaID")]
		public EntitySet<mangaReadingList> mangaReadingLists
		{
			get
			{
				return this._mangaReadingLists;
			}
			set
			{
				this._mangaReadingLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publisherInfo_mangaInfo", Storage="_publisherInfo", ThisKey="publisherID", OtherKey="publisherID", IsForeignKey=true, DeleteRule="CASCADE")]
		public publisherInfo publisherInfo
		{
			get
			{
				return this._publisherInfo.Entity;
			}
			set
			{
				publisherInfo previousValue = this._publisherInfo.Entity;
				if (((previousValue != value) 
							|| (this._publisherInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._publisherInfo.Entity = null;
						previousValue.mangaInfos.Remove(this);
					}
					this._publisherInfo.Entity = value;
					if ((value != null))
					{
						value.mangaInfos.Add(this);
						this._publisherID = value.publisherID;
					}
					else
					{
						this._publisherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("publisherInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mangaAuthors(mangaAuthor entity)
		{
			this.SendPropertyChanging();
			entity.mangaInfo = this;
		}
		
		private void detach_mangaAuthors(mangaAuthor entity)
		{
			this.SendPropertyChanging();
			entity.mangaInfo = null;
		}
		
		private void attach_mangaGenres(mangaGenre entity)
		{
			this.SendPropertyChanging();
			entity.mangaInfo = this;
		}
		
		private void detach_mangaGenres(mangaGenre entity)
		{
			this.SendPropertyChanging();
			entity.mangaInfo = null;
		}
		
		private void attach_mangaReadingLists(mangaReadingList entity)
		{
			this.SendPropertyChanging();
			entity.mangaInfo = this;
		}
		
		private void detach_mangaReadingLists(mangaReadingList entity)
		{
			this.SendPropertyChanging();
			entity.mangaInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.publisherInfo")]
	public partial class publisherInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _publisherID;
		
		private string _publisherName;
		
		private string _publisherCountry;
		
		private string _publisherWebsite;
		
		private string _publisherNote;
		
		private EntitySet<mangaInfo> _mangaInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpublisherIDChanging(int value);
    partial void OnpublisherIDChanged();
    partial void OnpublisherNameChanging(string value);
    partial void OnpublisherNameChanged();
    partial void OnpublisherCountryChanging(string value);
    partial void OnpublisherCountryChanged();
    partial void OnpublisherWebsiteChanging(string value);
    partial void OnpublisherWebsiteChanged();
    partial void OnpublisherNoteChanging(string value);
    partial void OnpublisherNoteChanged();
    #endregion
		
		public publisherInfo()
		{
			this._mangaInfos = new EntitySet<mangaInfo>(new Action<mangaInfo>(this.attach_mangaInfos), new Action<mangaInfo>(this.detach_mangaInfos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisherID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int publisherID
		{
			get
			{
				return this._publisherID;
			}
			set
			{
				if ((this._publisherID != value))
				{
					this.OnpublisherIDChanging(value);
					this.SendPropertyChanging();
					this._publisherID = value;
					this.SendPropertyChanged("publisherID");
					this.OnpublisherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisherName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string publisherName
		{
			get
			{
				return this._publisherName;
			}
			set
			{
				if ((this._publisherName != value))
				{
					this.OnpublisherNameChanging(value);
					this.SendPropertyChanging();
					this._publisherName = value;
					this.SendPropertyChanged("publisherName");
					this.OnpublisherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisherCountry", DbType="NVarChar(40)")]
		public string publisherCountry
		{
			get
			{
				return this._publisherCountry;
			}
			set
			{
				if ((this._publisherCountry != value))
				{
					this.OnpublisherCountryChanging(value);
					this.SendPropertyChanging();
					this._publisherCountry = value;
					this.SendPropertyChanged("publisherCountry");
					this.OnpublisherCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisherWebsite", DbType="NVarChar(150)")]
		public string publisherWebsite
		{
			get
			{
				return this._publisherWebsite;
			}
			set
			{
				if ((this._publisherWebsite != value))
				{
					this.OnpublisherWebsiteChanging(value);
					this.SendPropertyChanging();
					this._publisherWebsite = value;
					this.SendPropertyChanged("publisherWebsite");
					this.OnpublisherWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisherNote", DbType="NVarChar(500)")]
		public string publisherNote
		{
			get
			{
				return this._publisherNote;
			}
			set
			{
				if ((this._publisherNote != value))
				{
					this.OnpublisherNoteChanging(value);
					this.SendPropertyChanging();
					this._publisherNote = value;
					this.SendPropertyChanged("publisherNote");
					this.OnpublisherNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publisherInfo_mangaInfo", Storage="_mangaInfos", ThisKey="publisherID", OtherKey="publisherID")]
		public EntitySet<mangaInfo> mangaInfos
		{
			get
			{
				return this._mangaInfos;
			}
			set
			{
				this._mangaInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mangaInfos(mangaInfo entity)
		{
			this.SendPropertyChanging();
			entity.publisherInfo = this;
		}
		
		private void detach_mangaInfos(mangaInfo entity)
		{
			this.SendPropertyChanging();
			entity.publisherInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mangaReadingList")]
	public partial class mangaReadingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mangaEntryID;
		
		private int _mangaID;
		
		private System.Nullable<double> _mangaStartingChapter;
		
		private System.Nullable<double> _mangaCurrentChapter;
		
		private string _mangaURL;
		
		private System.Nullable<bool> _mangaReadingFinished;
		
		private System.Nullable<System.DateTime> _mangaDateRead;
		
		private string _mangaNote;
		
		private EntityRef<mangaInfo> _mangaInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmangaEntryIDChanging(int value);
    partial void OnmangaEntryIDChanged();
    partial void OnmangaIDChanging(int value);
    partial void OnmangaIDChanged();
    partial void OnmangaStartingChapterChanging(System.Nullable<double> value);
    partial void OnmangaStartingChapterChanged();
    partial void OnmangaCurrentChapterChanging(System.Nullable<double> value);
    partial void OnmangaCurrentChapterChanged();
    partial void OnmangaURLChanging(string value);
    partial void OnmangaURLChanged();
    partial void OnmangaReadingFinishedChanging(System.Nullable<bool> value);
    partial void OnmangaReadingFinishedChanged();
    partial void OnmangaDateReadChanging(System.Nullable<System.DateTime> value);
    partial void OnmangaDateReadChanged();
    partial void OnmangaNoteChanging(string value);
    partial void OnmangaNoteChanged();
    #endregion
		
		public mangaReadingList()
		{
			this._mangaInfo = default(EntityRef<mangaInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaEntryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int mangaEntryID
		{
			get
			{
				return this._mangaEntryID;
			}
			set
			{
				if ((this._mangaEntryID != value))
				{
					this.OnmangaEntryIDChanging(value);
					this.SendPropertyChanging();
					this._mangaEntryID = value;
					this.SendPropertyChanged("mangaEntryID");
					this.OnmangaEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaID", DbType="Int NOT NULL")]
		public int mangaID
		{
			get
			{
				return this._mangaID;
			}
			set
			{
				if ((this._mangaID != value))
				{
					if (this._mangaInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmangaIDChanging(value);
					this.SendPropertyChanging();
					this._mangaID = value;
					this.SendPropertyChanged("mangaID");
					this.OnmangaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaStartingChapter", DbType="Float")]
		public System.Nullable<double> mangaStartingChapter
		{
			get
			{
				return this._mangaStartingChapter;
			}
			set
			{
				if ((this._mangaStartingChapter != value))
				{
					this.OnmangaStartingChapterChanging(value);
					this.SendPropertyChanging();
					this._mangaStartingChapter = value;
					this.SendPropertyChanged("mangaStartingChapter");
					this.OnmangaStartingChapterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaCurrentChapter", DbType="Float")]
		public System.Nullable<double> mangaCurrentChapter
		{
			get
			{
				return this._mangaCurrentChapter;
			}
			set
			{
				if ((this._mangaCurrentChapter != value))
				{
					this.OnmangaCurrentChapterChanging(value);
					this.SendPropertyChanging();
					this._mangaCurrentChapter = value;
					this.SendPropertyChanged("mangaCurrentChapter");
					this.OnmangaCurrentChapterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaURL", DbType="NVarChar(200)")]
		public string mangaURL
		{
			get
			{
				return this._mangaURL;
			}
			set
			{
				if ((this._mangaURL != value))
				{
					this.OnmangaURLChanging(value);
					this.SendPropertyChanging();
					this._mangaURL = value;
					this.SendPropertyChanged("mangaURL");
					this.OnmangaURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaReadingFinished", DbType="Bit")]
		public System.Nullable<bool> mangaReadingFinished
		{
			get
			{
				return this._mangaReadingFinished;
			}
			set
			{
				if ((this._mangaReadingFinished != value))
				{
					this.OnmangaReadingFinishedChanging(value);
					this.SendPropertyChanging();
					this._mangaReadingFinished = value;
					this.SendPropertyChanged("mangaReadingFinished");
					this.OnmangaReadingFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaDateRead", DbType="Date")]
		public System.Nullable<System.DateTime> mangaDateRead
		{
			get
			{
				return this._mangaDateRead;
			}
			set
			{
				if ((this._mangaDateRead != value))
				{
					this.OnmangaDateReadChanging(value);
					this.SendPropertyChanging();
					this._mangaDateRead = value;
					this.SendPropertyChanged("mangaDateRead");
					this.OnmangaDateReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mangaNote", DbType="VarChar(MAX)")]
		public string mangaNote
		{
			get
			{
				return this._mangaNote;
			}
			set
			{
				if ((this._mangaNote != value))
				{
					this.OnmangaNoteChanging(value);
					this.SendPropertyChanging();
					this._mangaNote = value;
					this.SendPropertyChanged("mangaNote");
					this.OnmangaNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mangaInfo_mangaReadingList", Storage="_mangaInfo", ThisKey="mangaID", OtherKey="mangaID", IsForeignKey=true)]
		public mangaInfo mangaInfo
		{
			get
			{
				return this._mangaInfo.Entity;
			}
			set
			{
				mangaInfo previousValue = this._mangaInfo.Entity;
				if (((previousValue != value) 
							|| (this._mangaInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mangaInfo.Entity = null;
						previousValue.mangaReadingLists.Remove(this);
					}
					this._mangaInfo.Entity = value;
					if ((value != null))
					{
						value.mangaReadingLists.Add(this);
						this._mangaID = value.mangaID;
					}
					else
					{
						this._mangaID = default(int);
					}
					this.SendPropertyChanged("mangaInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
