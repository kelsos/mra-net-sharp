//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("mdbModel", "FK_MANGA_INFO_0", "PUBLISHER_INFO", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(mraSharp.PUBLISHER_INFO), "MANGA_INFO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mraSharp.MANGA_INFO), true)]
[assembly: EdmRelationshipAttribute("mdbModel", "FK_READING_LIST_0", "MANGA_INFO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mraSharp.MANGA_INFO), "READING_LIST", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mraSharp.READING_LIST), true)]
[assembly: EdmRelationshipAttribute("mdbModel", "MANGA_AUTHORS", "AUTHOR_INFO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mraSharp.AUTHOR_INFO), "MANGA_INFO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mraSharp.MANGA_INFO))]
[assembly: EdmRelationshipAttribute("mdbModel", "MANGA_GENRES", "MANGA_INFO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mraSharp.MANGA_INFO), "GENRE_INFO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mraSharp.GENRE_INFO))]

#endregion

namespace mraSharp
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class mangaDatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new mangaDatabaseEntities object using the connection string found in the 'mangaDatabaseEntities' section of the application configuration file.
        /// </summary>
        public mangaDatabaseEntities() : base("name=mangaDatabaseEntities", "mangaDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new mangaDatabaseEntities object.
        /// </summary>
        public mangaDatabaseEntities(string connectionString) : base(connectionString, "mangaDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new mangaDatabaseEntities object.
        /// </summary>
        public mangaDatabaseEntities(EntityConnection connection) : base(connection, "mangaDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AUTHOR_INFO> AUTHOR_INFO
        {
            get
            {
                if ((_AUTHOR_INFO == null))
                {
                    _AUTHOR_INFO = base.CreateObjectSet<AUTHOR_INFO>("AUTHOR_INFO");
                }
                return _AUTHOR_INFO;
            }
        }
        private ObjectSet<AUTHOR_INFO> _AUTHOR_INFO;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GENRE_INFO> GENRE_INFO
        {
            get
            {
                if ((_GENRE_INFO == null))
                {
                    _GENRE_INFO = base.CreateObjectSet<GENRE_INFO>("GENRE_INFO");
                }
                return _GENRE_INFO;
            }
        }
        private ObjectSet<GENRE_INFO> _GENRE_INFO;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MANGA_INFO> MANGA_INFO
        {
            get
            {
                if ((_MANGA_INFO == null))
                {
                    _MANGA_INFO = base.CreateObjectSet<MANGA_INFO>("MANGA_INFO");
                }
                return _MANGA_INFO;
            }
        }
        private ObjectSet<MANGA_INFO> _MANGA_INFO;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NEWS_STORAGE> NEWS_STORAGE
        {
            get
            {
                if ((_NEWS_STORAGE == null))
                {
                    _NEWS_STORAGE = base.CreateObjectSet<NEWS_STORAGE>("NEWS_STORAGE");
                }
                return _NEWS_STORAGE;
            }
        }
        private ObjectSet<NEWS_STORAGE> _NEWS_STORAGE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NEWS_SUBSCRIPTIONS> NEWS_SUBSCRIPTIONS
        {
            get
            {
                if ((_NEWS_SUBSCRIPTIONS == null))
                {
                    _NEWS_SUBSCRIPTIONS = base.CreateObjectSet<NEWS_SUBSCRIPTIONS>("NEWS_SUBSCRIPTIONS");
                }
                return _NEWS_SUBSCRIPTIONS;
            }
        }
        private ObjectSet<NEWS_SUBSCRIPTIONS> _NEWS_SUBSCRIPTIONS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PUBLISHER_INFO> PUBLISHER_INFO
        {
            get
            {
                if ((_PUBLISHER_INFO == null))
                {
                    _PUBLISHER_INFO = base.CreateObjectSet<PUBLISHER_INFO>("PUBLISHER_INFO");
                }
                return _PUBLISHER_INFO;
            }
        }
        private ObjectSet<PUBLISHER_INFO> _PUBLISHER_INFO;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<READING_LIST> READING_LIST
        {
            get
            {
                if ((_READING_LIST == null))
                {
                    _READING_LIST = base.CreateObjectSet<READING_LIST>("READING_LIST");
                }
                return _READING_LIST;
            }
        }
        private ObjectSet<READING_LIST> _READING_LIST;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AUTHOR_INFO EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAUTHOR_INFO(AUTHOR_INFO aUTHOR_INFO)
        {
            base.AddObject("AUTHOR_INFO", aUTHOR_INFO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GENRE_INFO EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGENRE_INFO(GENRE_INFO gENRE_INFO)
        {
            base.AddObject("GENRE_INFO", gENRE_INFO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MANGA_INFO EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMANGA_INFO(MANGA_INFO mANGA_INFO)
        {
            base.AddObject("MANGA_INFO", mANGA_INFO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NEWS_STORAGE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNEWS_STORAGE(NEWS_STORAGE nEWS_STORAGE)
        {
            base.AddObject("NEWS_STORAGE", nEWS_STORAGE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NEWS_SUBSCRIPTIONS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNEWS_SUBSCRIPTIONS(NEWS_SUBSCRIPTIONS nEWS_SUBSCRIPTIONS)
        {
            base.AddObject("NEWS_SUBSCRIPTIONS", nEWS_SUBSCRIPTIONS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PUBLISHER_INFO EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPUBLISHER_INFO(PUBLISHER_INFO pUBLISHER_INFO)
        {
            base.AddObject("PUBLISHER_INFO", pUBLISHER_INFO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the READING_LIST EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToREADING_LIST(READING_LIST rEADING_LIST)
        {
            base.AddObject("READING_LIST", rEADING_LIST);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mdbModel", Name="AUTHOR_INFO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AUTHOR_INFO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AUTHOR_INFO object.
        /// </summary>
        /// <param name="aUTHOR_ID">Initial value of the AUTHOR_ID property.</param>
        /// <param name="aUTHOR_NAME">Initial value of the AUTHOR_NAME property.</param>
        public static AUTHOR_INFO CreateAUTHOR_INFO(global::System.Int64 aUTHOR_ID, global::System.String aUTHOR_NAME)
        {
            AUTHOR_INFO aUTHOR_INFO = new AUTHOR_INFO();
            aUTHOR_INFO.AUTHOR_ID = aUTHOR_ID;
            aUTHOR_INFO.AUTHOR_NAME = aUTHOR_NAME;
            return aUTHOR_INFO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AUTHOR_ID
        {
            get
            {
                return _AUTHOR_ID;
            }
            set
            {
                if (_AUTHOR_ID != value)
                {
                    OnAUTHOR_IDChanging(value);
                    ReportPropertyChanging("AUTHOR_ID");
                    _AUTHOR_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AUTHOR_ID");
                    OnAUTHOR_IDChanged();
                }
            }
        }
        private global::System.Int64 _AUTHOR_ID;
        partial void OnAUTHOR_IDChanging(global::System.Int64 value);
        partial void OnAUTHOR_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AUTHOR_NAME
        {
            get
            {
                return _AUTHOR_NAME;
            }
            set
            {
                OnAUTHOR_NAMEChanging(value);
                ReportPropertyChanging("AUTHOR_NAME");
                _AUTHOR_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AUTHOR_NAME");
                OnAUTHOR_NAMEChanged();
            }
        }
        private global::System.String _AUTHOR_NAME;
        partial void OnAUTHOR_NAMEChanging(global::System.String value);
        partial void OnAUTHOR_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AUTHOR_NATIONALITY
        {
            get
            {
                return _AUTHOR_NATIONALITY;
            }
            set
            {
                OnAUTHOR_NATIONALITYChanging(value);
                ReportPropertyChanging("AUTHOR_NATIONALITY");
                _AUTHOR_NATIONALITY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AUTHOR_NATIONALITY");
                OnAUTHOR_NATIONALITYChanged();
            }
        }
        private global::System.String _AUTHOR_NATIONALITY;
        partial void OnAUTHOR_NATIONALITYChanging(global::System.String value);
        partial void OnAUTHOR_NATIONALITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AUTHOR_BIRTHDAY
        {
            get
            {
                return _AUTHOR_BIRTHDAY;
            }
            set
            {
                OnAUTHOR_BIRTHDAYChanging(value);
                ReportPropertyChanging("AUTHOR_BIRTHDAY");
                _AUTHOR_BIRTHDAY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AUTHOR_BIRTHDAY");
                OnAUTHOR_BIRTHDAYChanged();
            }
        }
        private Nullable<global::System.DateTime> _AUTHOR_BIRTHDAY;
        partial void OnAUTHOR_BIRTHDAYChanging(Nullable<global::System.DateTime> value);
        partial void OnAUTHOR_BIRTHDAYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AUTHOR_WEBSITE
        {
            get
            {
                return _AUTHOR_WEBSITE;
            }
            set
            {
                OnAUTHOR_WEBSITEChanging(value);
                ReportPropertyChanging("AUTHOR_WEBSITE");
                _AUTHOR_WEBSITE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AUTHOR_WEBSITE");
                OnAUTHOR_WEBSITEChanged();
            }
        }
        private global::System.String _AUTHOR_WEBSITE;
        partial void OnAUTHOR_WEBSITEChanging(global::System.String value);
        partial void OnAUTHOR_WEBSITEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mdbModel", "MANGA_AUTHORS", "MANGA_INFO")]
        public EntityCollection<MANGA_INFO> MANGA_INFO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MANGA_INFO>("mdbModel.MANGA_AUTHORS", "MANGA_INFO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MANGA_INFO>("mdbModel.MANGA_AUTHORS", "MANGA_INFO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mdbModel", Name="GENRE_INFO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GENRE_INFO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GENRE_INFO object.
        /// </summary>
        /// <param name="gENRE_ID">Initial value of the GENRE_ID property.</param>
        public static GENRE_INFO CreateGENRE_INFO(global::System.Int64 gENRE_ID)
        {
            GENRE_INFO gENRE_INFO = new GENRE_INFO();
            gENRE_INFO.GENRE_ID = gENRE_ID;
            return gENRE_INFO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GENRE_ID
        {
            get
            {
                return _GENRE_ID;
            }
            set
            {
                if (_GENRE_ID != value)
                {
                    OnGENRE_IDChanging(value);
                    ReportPropertyChanging("GENRE_ID");
                    _GENRE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GENRE_ID");
                    OnGENRE_IDChanged();
                }
            }
        }
        private global::System.Int64 _GENRE_ID;
        partial void OnGENRE_IDChanging(global::System.Int64 value);
        partial void OnGENRE_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GENRE_NAME
        {
            get
            {
                return _GENRE_NAME;
            }
            set
            {
                OnGENRE_NAMEChanging(value);
                ReportPropertyChanging("GENRE_NAME");
                _GENRE_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GENRE_NAME");
                OnGENRE_NAMEChanged();
            }
        }
        private global::System.String _GENRE_NAME;
        partial void OnGENRE_NAMEChanging(global::System.String value);
        partial void OnGENRE_NAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mdbModel", "MANGA_GENRES", "MANGA_INFO")]
        public EntityCollection<MANGA_INFO> MANGA_INFO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MANGA_INFO>("mdbModel.MANGA_GENRES", "MANGA_INFO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MANGA_INFO>("mdbModel.MANGA_GENRES", "MANGA_INFO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mdbModel", Name="MANGA_INFO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MANGA_INFO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MANGA_INFO object.
        /// </summary>
        /// <param name="mANGA_ID">Initial value of the MANGA_ID property.</param>
        /// <param name="mANGA_TITLE">Initial value of the MANGA_TITLE property.</param>
        public static MANGA_INFO CreateMANGA_INFO(global::System.Int64 mANGA_ID, global::System.String mANGA_TITLE)
        {
            MANGA_INFO mANGA_INFO = new MANGA_INFO();
            mANGA_INFO.MANGA_ID = mANGA_ID;
            mANGA_INFO.MANGA_TITLE = mANGA_TITLE;
            return mANGA_INFO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MANGA_ID
        {
            get
            {
                return _MANGA_ID;
            }
            set
            {
                if (_MANGA_ID != value)
                {
                    OnMANGA_IDChanging(value);
                    ReportPropertyChanging("MANGA_ID");
                    _MANGA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MANGA_ID");
                    OnMANGA_IDChanged();
                }
            }
        }
        private global::System.Int64 _MANGA_ID;
        partial void OnMANGA_IDChanging(global::System.Int64 value);
        partial void OnMANGA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MANGA_TITLE
        {
            get
            {
                return _MANGA_TITLE;
            }
            set
            {
                OnMANGA_TITLEChanging(value);
                ReportPropertyChanging("MANGA_TITLE");
                _MANGA_TITLE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MANGA_TITLE");
                OnMANGA_TITLEChanged();
            }
        }
        private global::System.String _MANGA_TITLE;
        partial void OnMANGA_TITLEChanging(global::System.String value);
        partial void OnMANGA_TITLEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MANGA_DESCRIPTION
        {
            get
            {
                return _MANGA_DESCRIPTION;
            }
            set
            {
                OnMANGA_DESCRIPTIONChanging(value);
                ReportPropertyChanging("MANGA_DESCRIPTION");
                _MANGA_DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MANGA_DESCRIPTION");
                OnMANGA_DESCRIPTIONChanged();
            }
        }
        private global::System.String _MANGA_DESCRIPTION;
        partial void OnMANGA_DESCRIPTIONChanging(global::System.String value);
        partial void OnMANGA_DESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MANGA_PUBLICATION_DATE
        {
            get
            {
                return _MANGA_PUBLICATION_DATE;
            }
            set
            {
                OnMANGA_PUBLICATION_DATEChanging(value);
                ReportPropertyChanging("MANGA_PUBLICATION_DATE");
                _MANGA_PUBLICATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MANGA_PUBLICATION_DATE");
                OnMANGA_PUBLICATION_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _MANGA_PUBLICATION_DATE;
        partial void OnMANGA_PUBLICATION_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnMANGA_PUBLICATION_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MANGA_PUBLICATION_STATUS
        {
            get
            {
                return _MANGA_PUBLICATION_STATUS;
            }
            set
            {
                OnMANGA_PUBLICATION_STATUSChanging(value);
                ReportPropertyChanging("MANGA_PUBLICATION_STATUS");
                _MANGA_PUBLICATION_STATUS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MANGA_PUBLICATION_STATUS");
                OnMANGA_PUBLICATION_STATUSChanged();
            }
        }
        private global::System.String _MANGA_PUBLICATION_STATUS;
        partial void OnMANGA_PUBLICATION_STATUSChanging(global::System.String value);
        partial void OnMANGA_PUBLICATION_STATUSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MANGA_PUBLISHER_ID
        {
            get
            {
                return _MANGA_PUBLISHER_ID;
            }
            set
            {
                OnMANGA_PUBLISHER_IDChanging(value);
                ReportPropertyChanging("MANGA_PUBLISHER_ID");
                _MANGA_PUBLISHER_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MANGA_PUBLISHER_ID");
                OnMANGA_PUBLISHER_IDChanged();
            }
        }
        private Nullable<global::System.Int64> _MANGA_PUBLISHER_ID;
        partial void OnMANGA_PUBLISHER_IDChanging(Nullable<global::System.Int64> value);
        partial void OnMANGA_PUBLISHER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] MANGA_COVER
        {
            get
            {
                return StructuralObject.GetValidValue(_MANGA_COVER);
            }
            set
            {
                OnMANGA_COVERChanging(value);
                ReportPropertyChanging("MANGA_COVER");
                _MANGA_COVER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MANGA_COVER");
                OnMANGA_COVERChanged();
            }
        }
        private global::System.Byte[] _MANGA_COVER;
        partial void OnMANGA_COVERChanging(global::System.Byte[] value);
        partial void OnMANGA_COVERChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mdbModel", "FK_MANGA_INFO_0", "PUBLISHER_INFO")]
        public PUBLISHER_INFO PUBLISHER_INFO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PUBLISHER_INFO>("mdbModel.FK_MANGA_INFO_0", "PUBLISHER_INFO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PUBLISHER_INFO>("mdbModel.FK_MANGA_INFO_0", "PUBLISHER_INFO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PUBLISHER_INFO> PUBLISHER_INFOReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PUBLISHER_INFO>("mdbModel.FK_MANGA_INFO_0", "PUBLISHER_INFO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PUBLISHER_INFO>("mdbModel.FK_MANGA_INFO_0", "PUBLISHER_INFO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mdbModel", "FK_READING_LIST_0", "READING_LIST")]
        public EntityCollection<READING_LIST> READING_LIST
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<READING_LIST>("mdbModel.FK_READING_LIST_0", "READING_LIST");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<READING_LIST>("mdbModel.FK_READING_LIST_0", "READING_LIST", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mdbModel", "MANGA_AUTHORS", "AUTHOR_INFO")]
        public EntityCollection<AUTHOR_INFO> AUTHOR_INFO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AUTHOR_INFO>("mdbModel.MANGA_AUTHORS", "AUTHOR_INFO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AUTHOR_INFO>("mdbModel.MANGA_AUTHORS", "AUTHOR_INFO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mdbModel", "MANGA_GENRES", "GENRE_INFO")]
        public EntityCollection<GENRE_INFO> GENRE_INFO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GENRE_INFO>("mdbModel.MANGA_GENRES", "GENRE_INFO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GENRE_INFO>("mdbModel.MANGA_GENRES", "GENRE_INFO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mdbModel", Name="NEWS_STORAGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NEWS_STORAGE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NEWS_STORAGE object.
        /// </summary>
        /// <param name="nEWSITEM_ID">Initial value of the NEWSITEM_ID property.</param>
        public static NEWS_STORAGE CreateNEWS_STORAGE(global::System.Int64 nEWSITEM_ID)
        {
            NEWS_STORAGE nEWS_STORAGE = new NEWS_STORAGE();
            nEWS_STORAGE.NEWSITEM_ID = nEWSITEM_ID;
            return nEWS_STORAGE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NEWSITEM_ID
        {
            get
            {
                return _NEWSITEM_ID;
            }
            set
            {
                if (_NEWSITEM_ID != value)
                {
                    OnNEWSITEM_IDChanging(value);
                    ReportPropertyChanging("NEWSITEM_ID");
                    _NEWSITEM_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NEWSITEM_ID");
                    OnNEWSITEM_IDChanged();
                }
            }
        }
        private global::System.Int64 _NEWSITEM_ID;
        partial void OnNEWSITEM_IDChanging(global::System.Int64 value);
        partial void OnNEWSITEM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NEWSITEM_TITLE
        {
            get
            {
                return _NEWSITEM_TITLE;
            }
            set
            {
                OnNEWSITEM_TITLEChanging(value);
                ReportPropertyChanging("NEWSITEM_TITLE");
                _NEWSITEM_TITLE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NEWSITEM_TITLE");
                OnNEWSITEM_TITLEChanged();
            }
        }
        private global::System.String _NEWSITEM_TITLE;
        partial void OnNEWSITEM_TITLEChanging(global::System.String value);
        partial void OnNEWSITEM_TITLEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NEWSITEM_HYPERLINK
        {
            get
            {
                return _NEWSITEM_HYPERLINK;
            }
            set
            {
                OnNEWSITEM_HYPERLINKChanging(value);
                ReportPropertyChanging("NEWSITEM_HYPERLINK");
                _NEWSITEM_HYPERLINK = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NEWSITEM_HYPERLINK");
                OnNEWSITEM_HYPERLINKChanged();
            }
        }
        private global::System.String _NEWSITEM_HYPERLINK;
        partial void OnNEWSITEM_HYPERLINKChanging(global::System.String value);
        partial void OnNEWSITEM_HYPERLINKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NEWSITEM_DESCRIPTION
        {
            get
            {
                return _NEWSITEM_DESCRIPTION;
            }
            set
            {
                OnNEWSITEM_DESCRIPTIONChanging(value);
                ReportPropertyChanging("NEWSITEM_DESCRIPTION");
                _NEWSITEM_DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NEWSITEM_DESCRIPTION");
                OnNEWSITEM_DESCRIPTIONChanged();
            }
        }
        private global::System.String _NEWSITEM_DESCRIPTION;
        partial void OnNEWSITEM_DESCRIPTIONChanging(global::System.String value);
        partial void OnNEWSITEM_DESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NEWSITEM_PUBLICATION_DATE
        {
            get
            {
                return _NEWSITEM_PUBLICATION_DATE;
            }
            set
            {
                OnNEWSITEM_PUBLICATION_DATEChanging(value);
                ReportPropertyChanging("NEWSITEM_PUBLICATION_DATE");
                _NEWSITEM_PUBLICATION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NEWSITEM_PUBLICATION_DATE");
                OnNEWSITEM_PUBLICATION_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _NEWSITEM_PUBLICATION_DATE;
        partial void OnNEWSITEM_PUBLICATION_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnNEWSITEM_PUBLICATION_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NEWSITEM_AQUISITION_DATE
        {
            get
            {
                return _NEWSITEM_AQUISITION_DATE;
            }
            set
            {
                OnNEWSITEM_AQUISITION_DATEChanging(value);
                ReportPropertyChanging("NEWSITEM_AQUISITION_DATE");
                _NEWSITEM_AQUISITION_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NEWSITEM_AQUISITION_DATE");
                OnNEWSITEM_AQUISITION_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _NEWSITEM_AQUISITION_DATE;
        partial void OnNEWSITEM_AQUISITION_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnNEWSITEM_AQUISITION_DATEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mdbModel", Name="NEWS_SUBSCRIPTIONS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NEWS_SUBSCRIPTIONS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NEWS_SUBSCRIPTIONS object.
        /// </summary>
        /// <param name="sUBSCRIPTION_ID">Initial value of the SUBSCRIPTION_ID property.</param>
        /// <param name="sUBSCRIPTION_URL">Initial value of the SUBSCRIPTION_URL property.</param>
        public static NEWS_SUBSCRIPTIONS CreateNEWS_SUBSCRIPTIONS(global::System.Int64 sUBSCRIPTION_ID, global::System.String sUBSCRIPTION_URL)
        {
            NEWS_SUBSCRIPTIONS nEWS_SUBSCRIPTIONS = new NEWS_SUBSCRIPTIONS();
            nEWS_SUBSCRIPTIONS.SUBSCRIPTION_ID = sUBSCRIPTION_ID;
            nEWS_SUBSCRIPTIONS.SUBSCRIPTION_URL = sUBSCRIPTION_URL;
            return nEWS_SUBSCRIPTIONS;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SUBSCRIPTION_ID
        {
            get
            {
                return _SUBSCRIPTION_ID;
            }
            set
            {
                if (_SUBSCRIPTION_ID != value)
                {
                    OnSUBSCRIPTION_IDChanging(value);
                    ReportPropertyChanging("SUBSCRIPTION_ID");
                    _SUBSCRIPTION_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SUBSCRIPTION_ID");
                    OnSUBSCRIPTION_IDChanged();
                }
            }
        }
        private global::System.Int64 _SUBSCRIPTION_ID;
        partial void OnSUBSCRIPTION_IDChanging(global::System.Int64 value);
        partial void OnSUBSCRIPTION_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SUBSCRIPTION_URL
        {
            get
            {
                return _SUBSCRIPTION_URL;
            }
            set
            {
                OnSUBSCRIPTION_URLChanging(value);
                ReportPropertyChanging("SUBSCRIPTION_URL");
                _SUBSCRIPTION_URL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SUBSCRIPTION_URL");
                OnSUBSCRIPTION_URLChanged();
            }
        }
        private global::System.String _SUBSCRIPTION_URL;
        partial void OnSUBSCRIPTION_URLChanging(global::System.String value);
        partial void OnSUBSCRIPTION_URLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SUBSCRIPTION_CHANNEL_NAME
        {
            get
            {
                return _SUBSCRIPTION_CHANNEL_NAME;
            }
            set
            {
                OnSUBSCRIPTION_CHANNEL_NAMEChanging(value);
                ReportPropertyChanging("SUBSCRIPTION_CHANNEL_NAME");
                _SUBSCRIPTION_CHANNEL_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SUBSCRIPTION_CHANNEL_NAME");
                OnSUBSCRIPTION_CHANNEL_NAMEChanged();
            }
        }
        private global::System.String _SUBSCRIPTION_CHANNEL_NAME;
        partial void OnSUBSCRIPTION_CHANNEL_NAMEChanging(global::System.String value);
        partial void OnSUBSCRIPTION_CHANNEL_NAMEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mdbModel", Name="PUBLISHER_INFO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PUBLISHER_INFO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PUBLISHER_INFO object.
        /// </summary>
        /// <param name="pUBLISHER_ID">Initial value of the PUBLISHER_ID property.</param>
        /// <param name="pUBLISHER_NAME">Initial value of the PUBLISHER_NAME property.</param>
        public static PUBLISHER_INFO CreatePUBLISHER_INFO(global::System.Int64 pUBLISHER_ID, global::System.String pUBLISHER_NAME)
        {
            PUBLISHER_INFO pUBLISHER_INFO = new PUBLISHER_INFO();
            pUBLISHER_INFO.PUBLISHER_ID = pUBLISHER_ID;
            pUBLISHER_INFO.PUBLISHER_NAME = pUBLISHER_NAME;
            return pUBLISHER_INFO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PUBLISHER_ID
        {
            get
            {
                return _PUBLISHER_ID;
            }
            set
            {
                if (_PUBLISHER_ID != value)
                {
                    OnPUBLISHER_IDChanging(value);
                    ReportPropertyChanging("PUBLISHER_ID");
                    _PUBLISHER_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PUBLISHER_ID");
                    OnPUBLISHER_IDChanged();
                }
            }
        }
        private global::System.Int64 _PUBLISHER_ID;
        partial void OnPUBLISHER_IDChanging(global::System.Int64 value);
        partial void OnPUBLISHER_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PUBLISHER_NAME
        {
            get
            {
                return _PUBLISHER_NAME;
            }
            set
            {
                OnPUBLISHER_NAMEChanging(value);
                ReportPropertyChanging("PUBLISHER_NAME");
                _PUBLISHER_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PUBLISHER_NAME");
                OnPUBLISHER_NAMEChanged();
            }
        }
        private global::System.String _PUBLISHER_NAME;
        partial void OnPUBLISHER_NAMEChanging(global::System.String value);
        partial void OnPUBLISHER_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PUBLISHER_COUNTRY
        {
            get
            {
                return _PUBLISHER_COUNTRY;
            }
            set
            {
                OnPUBLISHER_COUNTRYChanging(value);
                ReportPropertyChanging("PUBLISHER_COUNTRY");
                _PUBLISHER_COUNTRY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PUBLISHER_COUNTRY");
                OnPUBLISHER_COUNTRYChanged();
            }
        }
        private global::System.String _PUBLISHER_COUNTRY;
        partial void OnPUBLISHER_COUNTRYChanging(global::System.String value);
        partial void OnPUBLISHER_COUNTRYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PUBLISHER_WEBSITE
        {
            get
            {
                return _PUBLISHER_WEBSITE;
            }
            set
            {
                OnPUBLISHER_WEBSITEChanging(value);
                ReportPropertyChanging("PUBLISHER_WEBSITE");
                _PUBLISHER_WEBSITE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PUBLISHER_WEBSITE");
                OnPUBLISHER_WEBSITEChanged();
            }
        }
        private global::System.String _PUBLISHER_WEBSITE;
        partial void OnPUBLISHER_WEBSITEChanging(global::System.String value);
        partial void OnPUBLISHER_WEBSITEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PUBLISHER_NOTE
        {
            get
            {
                return _PUBLISHER_NOTE;
            }
            set
            {
                OnPUBLISHER_NOTEChanging(value);
                ReportPropertyChanging("PUBLISHER_NOTE");
                _PUBLISHER_NOTE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PUBLISHER_NOTE");
                OnPUBLISHER_NOTEChanged();
            }
        }
        private global::System.String _PUBLISHER_NOTE;
        partial void OnPUBLISHER_NOTEChanging(global::System.String value);
        partial void OnPUBLISHER_NOTEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mdbModel", "FK_MANGA_INFO_0", "MANGA_INFO")]
        public EntityCollection<MANGA_INFO> MANGA_INFO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MANGA_INFO>("mdbModel.FK_MANGA_INFO_0", "MANGA_INFO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MANGA_INFO>("mdbModel.FK_MANGA_INFO_0", "MANGA_INFO", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="mdbModel", Name="READING_LIST")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class READING_LIST : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new READING_LIST object.
        /// </summary>
        /// <param name="eNTRY_ID">Initial value of the ENTRY_ID property.</param>
        /// <param name="mANGA_ID">Initial value of the MANGA_ID property.</param>
        public static READING_LIST CreateREADING_LIST(global::System.Int64 eNTRY_ID, global::System.Int64 mANGA_ID)
        {
            READING_LIST rEADING_LIST = new READING_LIST();
            rEADING_LIST.ENTRY_ID = eNTRY_ID;
            rEADING_LIST.MANGA_ID = mANGA_ID;
            return rEADING_LIST;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ENTRY_ID
        {
            get
            {
                return _ENTRY_ID;
            }
            set
            {
                if (_ENTRY_ID != value)
                {
                    OnENTRY_IDChanging(value);
                    ReportPropertyChanging("ENTRY_ID");
                    _ENTRY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ENTRY_ID");
                    OnENTRY_IDChanged();
                }
            }
        }
        private global::System.Int64 _ENTRY_ID;
        partial void OnENTRY_IDChanging(global::System.Int64 value);
        partial void OnENTRY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MANGA_ID
        {
            get
            {
                return _MANGA_ID;
            }
            set
            {
                OnMANGA_IDChanging(value);
                ReportPropertyChanging("MANGA_ID");
                _MANGA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MANGA_ID");
                OnMANGA_IDChanged();
            }
        }
        private global::System.Int64 _MANGA_ID;
        partial void OnMANGA_IDChanging(global::System.Int64 value);
        partial void OnMANGA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> READ_STARTING_CHAPTER
        {
            get
            {
                return _READ_STARTING_CHAPTER;
            }
            set
            {
                OnREAD_STARTING_CHAPTERChanging(value);
                ReportPropertyChanging("READ_STARTING_CHAPTER");
                _READ_STARTING_CHAPTER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("READ_STARTING_CHAPTER");
                OnREAD_STARTING_CHAPTERChanged();
            }
        }
        private Nullable<global::System.Int64> _READ_STARTING_CHAPTER;
        partial void OnREAD_STARTING_CHAPTERChanging(Nullable<global::System.Int64> value);
        partial void OnREAD_STARTING_CHAPTERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> READ_CURRENT_CHAPTER
        {
            get
            {
                return _READ_CURRENT_CHAPTER;
            }
            set
            {
                OnREAD_CURRENT_CHAPTERChanging(value);
                ReportPropertyChanging("READ_CURRENT_CHAPTER");
                _READ_CURRENT_CHAPTER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("READ_CURRENT_CHAPTER");
                OnREAD_CURRENT_CHAPTERChanged();
            }
        }
        private Nullable<global::System.Int64> _READ_CURRENT_CHAPTER;
        partial void OnREAD_CURRENT_CHAPTERChanging(Nullable<global::System.Int64> value);
        partial void OnREAD_CURRENT_CHAPTERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String READ_ONLINE_URL
        {
            get
            {
                return _READ_ONLINE_URL;
            }
            set
            {
                OnREAD_ONLINE_URLChanging(value);
                ReportPropertyChanging("READ_ONLINE_URL");
                _READ_ONLINE_URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("READ_ONLINE_URL");
                OnREAD_ONLINE_URLChanged();
            }
        }
        private global::System.String _READ_ONLINE_URL;
        partial void OnREAD_ONLINE_URLChanging(global::System.String value);
        partial void OnREAD_ONLINE_URLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> READ_IS_FINISHED
        {
            get
            {
                return _READ_IS_FINISHED;
            }
            set
            {
                OnREAD_IS_FINISHEDChanging(value);
                ReportPropertyChanging("READ_IS_FINISHED");
                _READ_IS_FINISHED = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("READ_IS_FINISHED");
                OnREAD_IS_FINISHEDChanged();
            }
        }
        private Nullable<global::System.Boolean> _READ_IS_FINISHED;
        partial void OnREAD_IS_FINISHEDChanging(Nullable<global::System.Boolean> value);
        partial void OnREAD_IS_FINISHEDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> READ_LAST_TIME
        {
            get
            {
                return _READ_LAST_TIME;
            }
            set
            {
                OnREAD_LAST_TIMEChanging(value);
                ReportPropertyChanging("READ_LAST_TIME");
                _READ_LAST_TIME = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("READ_LAST_TIME");
                OnREAD_LAST_TIMEChanged();
            }
        }
        private Nullable<global::System.DateTime> _READ_LAST_TIME;
        partial void OnREAD_LAST_TIMEChanging(Nullable<global::System.DateTime> value);
        partial void OnREAD_LAST_TIMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String READ_NOTE
        {
            get
            {
                return _READ_NOTE;
            }
            set
            {
                OnREAD_NOTEChanging(value);
                ReportPropertyChanging("READ_NOTE");
                _READ_NOTE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("READ_NOTE");
                OnREAD_NOTEChanged();
            }
        }
        private global::System.String _READ_NOTE;
        partial void OnREAD_NOTEChanging(global::System.String value);
        partial void OnREAD_NOTEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("mdbModel", "FK_READING_LIST_0", "MANGA_INFO")]
        public MANGA_INFO MANGA_INFO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MANGA_INFO>("mdbModel.FK_READING_LIST_0", "MANGA_INFO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MANGA_INFO>("mdbModel.FK_READING_LIST_0", "MANGA_INFO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MANGA_INFO> MANGA_INFOReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MANGA_INFO>("mdbModel.FK_READING_LIST_0", "MANGA_INFO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MANGA_INFO>("mdbModel.FK_READING_LIST_0", "MANGA_INFO", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
